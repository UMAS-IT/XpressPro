<UserControl x:Class="Orion.UI.View.Quantech.EditQuoteItem.EditA3ItemView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Orion.UI.View.Quantech.EditQuoteItem"
             mc:Ignorable="d" 
             xmlns:ctrl="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:dialog="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
             dialog:DialogParticipation.Register="{Binding}"
             xmlns:icon="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors" 
             d:DesignHeight="600" d:DesignWidth="2000"
             d:DataContext="{d:DesignInstance Type=vm:EditA3ItemViewModel}"
             xmlns:vm="clr-namespace:Orion.UI.ViewModel.Quantech.EditQuoteItem"
             xmlns:view="clr-namespace:Orion.UI.View.Quantech.EditQuoteItem">

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding LoadDataCommand}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type ctrl:MetroWindow}}}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <UserControl.InputBindings>
        <KeyBinding Command="{Binding Path=SearchCommand}" Key="Enter"/>
    </UserControl.InputBindings>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>

        <Grid Grid.Column="0" Width="150">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>

            <GroupBox Header="Search Options" 
                      ctrl:ControlsHelper.ContentCharacterCasing="Normal"
                                  Margin="5,5,0,5">
                <StackPanel Orientation="Vertical">
                    <TextBox  
                             Grid.Column="0"
                             ctrl:TextBoxHelper.Watermark="Model Name"                          
                             ToolTip="Press ENTER to update searching"
                             ctrl:TextBoxHelper.ClearTextButton="True"
                             ctrl:TextBoxHelper.ButtonCommand="{Binding ResetSearchCommand}"
                             Text="{Binding Model, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, ValidatesOnNotifyDataErrors=True}"
                             Style="{DynamicResource TxtStyle}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <i:InvokeCommandAction Command="{Binding SearchCommand}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TextBox>


                </StackPanel>


            </GroupBox>

            <GroupBox Header="Actions" 
                      ctrl:ControlsHelper.ContentCharacterCasing="Normal"
                      Grid.Row="2"
                                  Margin="5,0,0,5">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>

                    <Button Grid.Column="0"  
                        Margin="1"
                            Background="DarkRed"
                            ToolTip="Cancel"
                                        Command="{Binding BackCommand}"
                            CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type ctrl:MetroWindow}}}">
                        <Button.Content>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="auto"/>
                                </Grid.ColumnDefinitions>


                                <icon:PackIconForkAwesome Kind="Times" 
                                                        Grid.Column="1" 
                                                        VerticalAlignment="Center"
                                                        HorizontalAlignment="Center">
                                    <icon:PackIconForkAwesome.LayoutTransform>
                                        <TransformGroup>
                                            <ScaleTransform ScaleX="0.75" ScaleY="0.75"/>
                                        </TransformGroup>
                                    </icon:PackIconForkAwesome.LayoutTransform>
                                </icon:PackIconForkAwesome>

                            </Grid>
                        </Button.Content>

                    </Button>

                    <Button Grid.Column="1"  
                        Margin="1"
                            Background="{StaticResource MahApps.Brushes.Accent}"
                            ToolTip="Save Items"
                                        Command="{Binding SaveCommand}"
                            CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type ctrl:MetroWindow}}}">
                        <Button.Content>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="auto"/>
                                </Grid.ColumnDefinitions>


                                <icon:PackIconMaterial Kind="ContentSave" 
                                                        Grid.Column="1" 
                                                        VerticalAlignment="Center"
                                                        HorizontalAlignment="Center">
                                    <icon:PackIconMaterial.LayoutTransform>
                                        <TransformGroup>
                                            <ScaleTransform ScaleX="0.75" ScaleY="0.75"/>
                                        </TransformGroup>
                                    </icon:PackIconMaterial.LayoutTransform>
                                </icon:PackIconMaterial>

                            </Grid>
                        </Button.Content>

                    </Button>


                </Grid>

            </GroupBox>


        </Grid>

        <Grid Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>



            <Grid Grid.Row="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>

                <Border Grid.Row="0" Margin="5,5,5,0" BorderThickness="1"  Background="{StaticResource MahApps.Brushes.Gray.SemiTransparent}" BorderBrush="{StaticResource MahApps.Brushes.Accent}">
                    <Label Content="All Items" HorizontalAlignment="Center" FontSize="12" />
                </Border>

                <DataGrid       Grid.Row="1"
                            Margin="5,5,5,0"
                            ItemsSource="{Binding Catalogs, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"  
                            Style="{StaticResource DGridStyle}"
                            CanUserSortColumns="False"
                            FrozenColumnCount="2">

                    <DataGrid.Columns>

                        <DataGridTemplateColumn   CanUserResize="False"  Width="auto">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Button Grid.Row="0"
                                                        Background="#FF87B036"
                                                        ToolTip="Add Item To Quote"
                                                        Command="{Binding Path=DataContext.AddItemCommand, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" CommandParameter="{Binding}" >
                                        <icon:PackIconMaterial Kind="PlusThick" >
                                            <icon:PackIconMaterial.LayoutTransform>
                                                <TransformGroup>
                                                    <ScaleTransform ScaleX="0.75" ScaleY="0.75"/>
                                                </TransformGroup>
                                            </icon:PackIconMaterial.LayoutTransform>
                                        </icon:PackIconMaterial>
                                    </Button>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <DataGridTextColumn Header="Model" Binding="{Binding Model}"  HeaderStyle="{StaticResource ColumnHeaderStyle}"    IsReadOnly="True" Width="auto"/>
                        <DataGridTextColumn Header="Unit Size" Binding="{Binding UnitSize}"  HeaderStyle="{StaticResource ColumnHeaderStyle}"    IsReadOnly="True" Width="auto"/>
                        <DataGridTextColumn Header="Description" Binding="{Binding Description}"  HeaderStyle="{StaticResource ColumnHeaderStyle}"    IsReadOnly="True" Width="auto"/>
                        <DataGridTextColumn Header="Voltage" Binding="{Binding Voltage}"  HeaderStyle="{StaticResource ColumnHeaderStyle}"    IsReadOnly="True" Width="auto"/>
                        <DataGridTextColumn Header="List Price" Binding="{Binding ListPrice, StringFormat={}{0:c}}"   HeaderStyle="{StaticResource ColumnHeaderStyle}"    IsReadOnly="True" Width="auto"/>
                        <DataGridTextColumn Header="Cost Multiplier" Binding="{Binding CostMultiplier}"   HeaderStyle="{StaticResource ColumnHeaderStyle}"    IsReadOnly="True" Width="auto"/>
                        <DataGridTextColumn Header="Cost" Binding="{Binding Cost, StringFormat= {}{0:c}}"   HeaderStyle="{StaticResource ColumnHeaderStyle}"    IsReadOnly="True" Width="auto"/>
                        <DataGridTextColumn Header="Sell Margin" Binding="{Binding SellMargin, StringFormat={}{0}%}"   HeaderStyle="{StaticResource ColumnHeaderStyle}"    IsReadOnly="True" Width="auto"/>
                        <DataGridTextColumn Header="Sell Price" Binding="{Binding SellPrice, StringFormat={}{0:c}}"   HeaderStyle="{StaticResource ColumnHeaderStyle}"    IsReadOnly="True" Width="auto"/>
                    </DataGrid.Columns>
                </DataGrid>
            </Grid>


            <Grid Grid.Row="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>

                <Border Grid.Row="0" Margin="5,5,5,0" BorderThickness="1"  Background="{StaticResource MahApps.Brushes.Gray.SemiTransparent}" BorderBrush="{StaticResource MahApps.Brushes.Accent}">
                    <Label Content="Quote Items" HorizontalAlignment="Center" FontSize="12" />
                </Border>

                <DataGrid       Grid.Row="1"
                            Margin="5,5,5,5"
                            ItemsSource="{Binding Items, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"  
                            Style="{StaticResource DGridStyle}"
                            CanUserSortColumns="False"
                            FrozenColumnCount="1">

                    <DataGrid.Columns>

                        <DataGridTemplateColumn   CanUserResize="False"  Width="auto">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Button Grid.Row="0"
                                                        Background="DarkRed"
                                                        ToolTip="Remove Item From Quote"
                                                        Command="{Binding Path=DataContext.RemoveItemCommand, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" CommandParameter="{Binding}" >
                                        <icon:PackIconMaterial Kind="MinusThick" >
                                            <icon:PackIconMaterial.LayoutTransform>
                                                <TransformGroup>
                                                    <ScaleTransform ScaleX="0.75" ScaleY="0.75"/>
                                                </TransformGroup>
                                            </icon:PackIconMaterial.LayoutTransform>
                                        </icon:PackIconMaterial>
                                    </Button>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <DataGridTemplateColumn Header="Exclude">
                            <DataGridTemplateColumn.HeaderStyle>
                                <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource ColumnHeaderStyle}"/>
                            </DataGridTemplateColumn.HeaderStyle>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <CheckBox ToolTip="Exclude item from quote" IsChecked="{Binding IsExcluded, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                                        <CheckBox.Style>
                                            <Style TargetType="CheckBox" BasedOn="{StaticResource MahApps.Styles.CheckBox}">
                                                <Setter Property="VerticalAlignment" Value="Center"/>
                                                <Setter Property="VerticalContentAlignment" Value="Center"/>
                                                <Setter Property="HorizontalAlignment" Value="Center"/>
                                                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                                <Setter Property="LayoutTransform">
                                                    <Setter.Value>
                                                        <ScaleTransform ScaleX="1.25" ScaleY="1.25" />
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </CheckBox.Style>
                                    </CheckBox>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <DataGridTemplateColumn Header="Override">
                            <DataGridTemplateColumn.HeaderStyle>
                                <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource ColumnHeaderStyle}"/>
                            </DataGridTemplateColumn.HeaderStyle>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <CheckBox ToolTip="Override item prices" IsChecked="{Binding OverridePrice, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                                        <CheckBox.Style>
                                            <Style TargetType="CheckBox" BasedOn="{StaticResource MahApps.Styles.CheckBox}">
                                                <Setter Property="VerticalAlignment" Value="Center"/>
                                                <Setter Property="VerticalContentAlignment" Value="Center"/>
                                                <Setter Property="HorizontalAlignment" Value="Center"/>
                                                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                                <Setter Property="LayoutTransform">
                                                    <Setter.Value>
                                                        <ScaleTransform ScaleX="1.25" ScaleY="1.25" />
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </CheckBox.Style>
                                    </CheckBox>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <DataGridTemplateColumn Header="Tag">
                            <DataGridTemplateColumn.HeaderStyle>
                                <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource ColumnHeaderStyle}">
                                    <Setter Property="Width" Value="auto"/>
                                </Style>
                            </DataGridTemplateColumn.HeaderStyle>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBox Text="{Binding Tag, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" MaxLength="20" CharacterCasing="Upper"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <DataGridTemplateColumn Header="Quantity">
                            <DataGridTemplateColumn.HeaderStyle>
                                <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource ColumnHeaderStyle}"/>
                            </DataGridTemplateColumn.HeaderStyle>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <ctrl:NumericUpDown Minimum="1" Interval="1" Value="{Binding Quantity, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <DataGridTextColumn Header="Model" Binding="{Binding Catalog.Model}"  HeaderStyle="{StaticResource ColumnHeaderStyle}"    IsReadOnly="True" Width="auto"/>
                        <DataGridTextColumn Header="Unit Size" Binding="{Binding Catalog.UnitSize}"  HeaderStyle="{StaticResource ColumnHeaderStyle}"    IsReadOnly="True" Width="auto"/>
                        <DataGridTextColumn Header="Description" Binding="{Binding Catalog.Description}"  HeaderStyle="{StaticResource ColumnHeaderStyle}"    IsReadOnly="True" Width="auto"/>
                        <DataGridTextColumn Header="Voltage" Binding="{Binding Catalog.Voltage}"  HeaderStyle="{StaticResource ColumnHeaderStyle}"    IsReadOnly="True" Width="auto"/>

                        <DataGridTemplateColumn Header="List Price">
                            <DataGridTemplateColumn.HeaderStyle>
                                <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource ColumnHeaderStyle}">
                                    <Setter Property="Width" Value="auto"/>
                                </Style>
                            </DataGridTemplateColumn.HeaderStyle>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBox MaxLength="20" ctrl:TextBoxHelper.SelectAllOnFocus="True" PreviewTextInput="IsDouble" Text="{Binding ListPrice, UpdateSourceTrigger=LostFocus,StringFormat={}{0:c} , Mode=TwoWay}">
                                        <TextBox.Style>
                                            <Style TargetType="TextBox" BasedOn="{StaticResource MahApps.Styles.TextBox}">
                                                <Setter Property="IsReadOnly" Value="True"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding OverridePrice}" Value="True">
                                                        <Setter Property="Background" Value="#32B974"/>
                                                        <Setter Property="IsReadOnly" Value="False"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBox.Style>
                                    </TextBox>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <DataGridTemplateColumn Header="Cost Multiplier">
                            <DataGridTemplateColumn.HeaderStyle>
                                <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource ColumnHeaderStyle}">
                                    <Setter Property="Width" Value="auto"/>
                                </Style>
                            </DataGridTemplateColumn.HeaderStyle>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBox MaxLength="20" ctrl:TextBoxHelper.SelectAllOnFocus="True" PreviewTextInput="IsDouble" Text="{Binding CostMultiplier, UpdateSourceTrigger=LostFocus , Mode=TwoWay}">
                                        <TextBox.Style>
                                            <Style TargetType="TextBox" BasedOn="{StaticResource MahApps.Styles.TextBox}">
                                                <Setter Property="IsReadOnly" Value="True"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding OverridePrice}" Value="True">
                                                        <Setter Property="Background" Value="#32B974"/>
                                                        <Setter Property="IsReadOnly" Value="False"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBox.Style>
                                    </TextBox>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <DataGridTextColumn Header="Cost" Binding="{Binding Cost, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0:c} , Mode=TwoWay}"  HeaderStyle="{StaticResource ColumnHeaderStyle}"    IsReadOnly="True" Width="auto"/>

                        <DataGridTemplateColumn Header="Sell Margin">
                            <DataGridTemplateColumn.HeaderStyle>
                                <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource ColumnHeaderStyle}">
                                    <Setter Property="Width" Value="auto"/>
                                </Style>
                            </DataGridTemplateColumn.HeaderStyle>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBox MaxLength="20" ctrl:TextBoxHelper.SelectAllOnFocus="True" PreviewTextInput="IsDouble" Text="{Binding SellMargin, UpdateSourceTrigger=LostFocus,StringFormat={}{0}% , Mode=TwoWay}">
                                        <TextBox.Style>
                                            <Style TargetType="TextBox" BasedOn="{StaticResource MahApps.Styles.TextBox}">
                                                <Setter Property="IsReadOnly" Value="True"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding OverridePrice}" Value="True">
                                                        <Setter Property="Background" Value="#32B974"/>
                                                        <Setter Property="IsReadOnly" Value="False"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBox.Style>
                                    </TextBox>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <DataGridTextColumn Header="Sell Price" Binding="{Binding SellPrice, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0:c} , Mode=TwoWay}"  HeaderStyle="{StaticResource ColumnHeaderStyle}"    IsReadOnly="True" Width="auto"/>

                        <DataGridTextColumn Header="Total" Binding="{Binding TotalPrice, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0:c} , Mode=TwoWay}"  HeaderStyle="{StaticResource ColumnHeaderStyle}"    IsReadOnly="True" Width="auto"/>
                    </DataGrid.Columns>
                </DataGrid>
            </Grid>
        </Grid>

    </Grid>
</UserControl>
