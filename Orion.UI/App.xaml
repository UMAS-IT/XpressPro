<Application x:Class="Orion.UI.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Orion.UI"
             xmlns:ctrl="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:Dialogs="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
             xmlns:vm="clr-namespace:Orion.UI.ViewModel"
             xmlns:view="clr-namespace:Orion.UI.View"
             StartupUri="View/MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Themes/Dark.Blue.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <DataTemplate DataType="{x:Type vm:LoginViewModel}">
                <view:LoginView/>
            </DataTemplate>

            <DataTemplate DataType="{x:Type vm:AirTreatmentViewModel}">
                <view:AirTreatmentView/>
            </DataTemplate>

            <DataTemplate DataType="{x:Type vm:MenuViewModel}">
                <view:MenuView/>
            </DataTemplate>

            <DataTemplate DataType="{x:Type vm:NewProjectViewModel}">
                <view:NewProjectView/>
            </DataTemplate>
            
            <DataTemplate DataType="{x:Type vm:OpenProjectViewModel}">
                <view:OpenProjectView/>
            </DataTemplate>

            <DataTemplate DataType="{x:Type vm:ComingSoonViewModel}">
                <view:ComingSoonView/>
            </DataTemplate>
            
            <DataTemplate DataType="{x:Type vm:ProjectInformationViewModel}">
                <view:ProjectInformationView/>
            </DataTemplate>

            <DataTemplate DataType="{x:Type vm:QuoteViewModel}">
                <view:QuoteView/>
            </DataTemplate>

            <DataTemplate DataType="{x:Type vm:CreateQuoteViewModel}">
                <view:CreateQuoteView/>
            </DataTemplate>

            <DataTemplate DataType="{x:Type vm:ItemViewModel}">
                <view:ItemView/>
            </DataTemplate>

            <Style  x:Key="TxtStyle" TargetType="TextBox" BasedOn="{StaticResource ResourceKey=MahApps.Styles.TextBox}">
                <Setter Property="ctrl:TextBoxHelper.UseFloatingWatermark" Value="True"/>
                <Setter Property="ctrl:TextBoxHelper.SelectAllOnFocus" Value="True"/>
                <Setter Property="Margin" Value="1"/>
                <Setter Property="Height" Value="40"/>
            </Style>

            <Style  x:Key="CBoxStyle" TargetType="ComboBox" BasedOn="{StaticResource ResourceKey=MahApps.Styles.ComboBox}">
                <Setter Property="ctrl:TextBoxHelper.UseFloatingWatermark" Value="True"/>
                <Setter Property="ctrl:TextBoxHelper.SelectAllOnFocus" Value="True"/>
                <Setter Property="Margin" Value="1"/>
                <Setter Property="Height" Value="40"/>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Text}" Value="">
                        <Setter Property="Background" Value="IndianRed"/>
                        <Setter Property="ToolTip" Value="Missing value"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="DGridStyle" TargetType="DataGrid" BasedOn="{StaticResource ResourceKey=MahApps.Styles.DataGrid}">
                <Setter Property="AlternationCount" Value="1"/>
                <Setter Property="AlternatingRowBackground" Value="#2E2D2E"/>
                <Setter Property="HorizontalScrollBarVisibility" Value="Auto"/>
                <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="RowHeaderWidth" Value="0"/>
                <Setter Property="SelectionMode" Value="Single"/>
                <Setter Property="GridLinesVisibility" Value="All"/>
                <Setter Property="SelectionUnit" Value="FullRow"/>
                <Setter Property="FontWeight" Value="DemiBold"/>
                <Setter Property="AutoGenerateColumns" Value="False"/>
                <Setter Property="CanUserResizeColumns" Value="True"/>
                <Setter Property="CanUserResizeRows" Value="False"/>
                <Setter Property="CanUserDeleteRows" Value="False"/>
                <Setter Property="CanUserAddRows" Value="False"/>
                <Setter Property="CanUserReorderColumns" Value="False"/>
            </Style>

            <Style x:Key="ColumnHeaderStyle" 
                   BasedOn="{StaticResource ResourceKey=MahApps.Styles.DataGridColumnHeader}" 
                   TargetType="{x:Type TypeName=DataGridColumnHeader}">
                <Setter Property="ctrl:ControlsHelper.ContentCharacterCasing" Value="Normal"/>
            </Style>
            <Style x:Key="RadioButtonStyle" TargetType="RadioButton" BasedOn="{StaticResource MahApps.Styles.RadioButton}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RadioButton}">
                            <BulletDecorator Background="White" Cursor="Hand">
                                <BulletDecorator.Bullet>
                                    <Grid Height="16" Width="16">
                                        <!--Define size of the Bullet-->
                                        <!--The two borders-->
                                        <Border Name="RadioOuter" Background="Transparent" BorderBrush="Gainsboro" BorderThickness="2" CornerRadius="2" />
                                        <Border CornerRadius="0" Margin="4" Name="RadioMark" Background="#FFADADAD" Visibility="Hidden" />
                                    </Grid>
                                </BulletDecorator.Bullet>
                                <!--Text element-->
                                <TextBlock Margin="3,1,0,0" Foreground="#FF3E3E3E" FontFamily="Calibri" FontSize="12">
                        <ContentPresenter />
                                </TextBlock>
                            </BulletDecorator>
                            <!--If item is checked, trigger the visibility of the mark-->
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="true">
                                    <!--If item is checked, trigger the visibility of the mark and change the color of the selected bullet into a darker gray for better highlighting-->
                                    <Setter TargetName="RadioMark" Property="Visibility" Value="Visible"/>
                                    <Setter TargetName="RadioOuter" Property="BorderBrush" Value="#FFADADAD" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>


            <Style TargetType="CheckBox" x:Key="CircleCheckbox"> 
                <Setter Property="Cursor" Value="Hand"></Setter>
                <Setter Property="Content" Value=""></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type CheckBox}">
                            <Grid>
                                <Ellipse x:Name="outerEllipse">
                                    <Ellipse.Fill>
                                        <RadialGradientBrush>
                                            <GradientStop Offset="0" Color="Red"/>
                                            <GradientStop Offset="0.88" Color="LightCoral"/>
                                            <GradientStop Offset="1" Color="DarkRed"/>
                                        </RadialGradientBrush>
                                    </Ellipse.Fill>
                                </Ellipse>
                                <Ellipse Margin="10" x:Name="highlightCircle" >
                                    <Ellipse.Fill >
                                        <LinearGradientBrush >
                                            <GradientStop Offset="0" Color="Green"/>
                                            <GradientStop Offset="0.5" Color="LightGreen"/>
                                            <GradientStop Offset="1" Color="DarkGreen"/>
                                        </LinearGradientBrush>
                                    </Ellipse.Fill>
                                </Ellipse>
                                <ContentPresenter x:Name="content" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="highlightCircle" Property="Fill">
                                        <Setter.Value>
                                            <LinearGradientBrush StartPoint="0.3,0" EndPoint="0.7,1">
                                                <GradientStop Offset="0" Color="Green"/>
                                                <GradientStop Offset="0.5" Color="LightGreen"/>
                                                <GradientStop Offset="1" Color="DarkGreen"/>
                                            </LinearGradientBrush>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter TargetName="outerEllipse" Property="Fill">
                                        <Setter.Value>
                                            <RadialGradientBrush>
                                                <GradientStop Offset="0" Color="Green"/>
                                                <GradientStop Offset="0.88" Color="LightGreen"/>
                                                <GradientStop Offset="1" Color="DarkGreen"/>
                                            </RadialGradientBrush>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="False">
                                    <Setter TargetName="highlightCircle" Property="Fill">
                                        <Setter.Value>
                                            <LinearGradientBrush StartPoint="0.3,0" EndPoint="0.7,1">
                                                <GradientStop Offset="0" Color="Red"/>
                                                <GradientStop Offset="0.5" Color="LightCoral"/>
                                                <GradientStop Offset="1" Color="DarkRed"/>
                                            </LinearGradientBrush>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

        </ResourceDictionary>
    </Application.Resources>
</Application>
