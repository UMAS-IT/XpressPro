// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Orion.DataAccess.DataBase;

namespace Orion.DataAccess.Migrations
{
    [DbContext(typeof(GlobalDbContext))]
    [Migration("20221027063033_mig-02")]
    partial class mig02
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.0-rtm-30799")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Orion.Domain.Entity.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationDate");

                    b.Property<string>("Name");

                    b.Property<string>("Notes");

                    b.Property<int>("Number");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("Orion.Domain.Entity.Spec", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<int>("TitleId");

                    b.HasKey("Id");

                    b.HasIndex("TitleId");

                    b.ToTable("Specs");
                });

            modelBuilder.Entity("Orion.Domain.Entity.Title", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ItemAirCooledChillerId");

                    b.Property<int?>("ItemAirHandlerId");

                    b.Property<int?>("ItemPumpId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("ItemAirCooledChillerId");

                    b.HasIndex("ItemAirHandlerId");

                    b.HasIndex("ItemPumpId");

                    b.ToTable("Titles");
                });

            modelBuilder.Entity("Orion.Domain.Entity.Unit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<int>("ProjectId");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("Units");
                });

            modelBuilder.Entity("Orion.Domain.Entity.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LoginName");

                    b.Property<string>("Name");

                    b.Property<string>("PassKey");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Orion.Domain.EntityAirCooledChiller.UnitItemAirCooledChiller", b =>
                {
                    b.Property<int>("UnitId");

                    b.Property<int>("ItemAirCooledChillerId");

                    b.HasKey("UnitId", "ItemAirCooledChillerId");

                    b.HasIndex("ItemAirCooledChillerId");

                    b.ToTable("UnitItemAirCooledChillers");
                });

            modelBuilder.Entity("Orion.Domain.EntityAirCooledCondenser.CatalogAirCooledChiller", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Ambient");

                    b.Property<string>("ChwEwtLwt");

                    b.Property<double>("ChwGpm");

                    b.Property<string>("Model");

                    b.Property<double>("NominalCapacity");

                    b.Property<string>("Voltage");

                    b.HasKey("Id");

                    b.ToTable("CatalogAirCooledChillers");
                });

            modelBuilder.Entity("Orion.Domain.EntityAirCooledCondenser.ItemAirCooledChiller", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("ItemAirCooledChillers");
                });

            modelBuilder.Entity("Orion.Domain.EntityAirCooledCondenser.ItemAirCooledChillerCatalogAirCooledChiller", b =>
                {
                    b.Property<int>("ItemAirCooledChillerId");

                    b.Property<int>("CatalogAirCooledChillerId");

                    b.HasKey("ItemAirCooledChillerId", "CatalogAirCooledChillerId");

                    b.HasIndex("CatalogAirCooledChillerId");

                    b.ToTable("ItemAirCooledChillerCatalogAirCooledChillers");
                });

            modelBuilder.Entity("Orion.Domain.EntityAirHandler.CatalogAirHandler", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("CatalogAirHandlers");
                });

            modelBuilder.Entity("Orion.Domain.EntityAirHandler.ItemAirHandler", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("ItemAirHandlers");
                });

            modelBuilder.Entity("Orion.Domain.EntityAirHandler.ItemAirHandlerCatalogAirHandler", b =>
                {
                    b.Property<int>("ItemAirHandlerId");

                    b.Property<int>("CatalogAirHandlerId");

                    b.HasKey("ItemAirHandlerId", "CatalogAirHandlerId");

                    b.HasIndex("CatalogAirHandlerId");

                    b.ToTable("ItemAirHandlerCatalogAirHandlers");
                });

            modelBuilder.Entity("Orion.Domain.EntityAirHandler.UnitItemAirHandler", b =>
                {
                    b.Property<int>("UnitId");

                    b.Property<int>("ItemAirHandlerId");

                    b.HasKey("UnitId", "ItemAirHandlerId");

                    b.HasIndex("ItemAirHandlerId");

                    b.ToTable("UnitItemAirHandlers");
                });

            modelBuilder.Entity("Orion.Domain.EntityPump.CatalogPump", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Flow");

                    b.Property<double>("Head");

                    b.Property<string>("Model");

                    b.Property<string>("Motor");

                    b.Property<double>("hp");

                    b.HasKey("Id");

                    b.ToTable("CatalogPumps");
                });

            modelBuilder.Entity("Orion.Domain.EntityPump.ItemPump", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("ItemPumps");
                });

            modelBuilder.Entity("Orion.Domain.EntityPump.ItemPumpCatalogPump", b =>
                {
                    b.Property<int>("ItemPumpId");

                    b.Property<int>("CatalogPumpId");

                    b.HasKey("ItemPumpId", "CatalogPumpId");

                    b.HasIndex("CatalogPumpId");

                    b.ToTable("ItemPumpCatalogPumps");
                });

            modelBuilder.Entity("Orion.Domain.EntityPump.UnitItemPump", b =>
                {
                    b.Property<int>("UnitId");

                    b.Property<int>("ItemPumpId");

                    b.HasKey("UnitId", "ItemPumpId");

                    b.HasIndex("ItemPumpId");

                    b.ToTable("UnitItemPumps");
                });

            modelBuilder.Entity("Orion.Domain.Entity.Project", b =>
                {
                    b.HasOne("Orion.Domain.Entity.User", "User")
                        .WithMany("Projects")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.Entity.Spec", b =>
                {
                    b.HasOne("Orion.Domain.Entity.Title", "Title")
                        .WithMany("Specs")
                        .HasForeignKey("TitleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.Entity.Title", b =>
                {
                    b.HasOne("Orion.Domain.EntityAirCooledCondenser.ItemAirCooledChiller", "ItemAirCooledChiller")
                        .WithMany("Titles")
                        .HasForeignKey("ItemAirCooledChillerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.EntityAirHandler.ItemAirHandler", "ItemAirHandler")
                        .WithMany("Titles")
                        .HasForeignKey("ItemAirHandlerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.EntityPump.ItemPump", "ItemPump")
                        .WithMany("Titles")
                        .HasForeignKey("ItemPumpId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Orion.Domain.Entity.Unit", b =>
                {
                    b.HasOne("Orion.Domain.Entity.Project", "Project")
                        .WithMany("Units")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.EntityAirCooledChiller.UnitItemAirCooledChiller", b =>
                {
                    b.HasOne("Orion.Domain.EntityAirCooledCondenser.ItemAirCooledChiller", "ItemAirCooledChiller")
                        .WithMany("UnitItemAirCooledChillers")
                        .HasForeignKey("ItemAirCooledChillerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Orion.Domain.Entity.Unit", "Unit")
                        .WithMany("UnitItemAirCooledChillers")
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.EntityAirCooledCondenser.ItemAirCooledChillerCatalogAirCooledChiller", b =>
                {
                    b.HasOne("Orion.Domain.EntityAirCooledCondenser.CatalogAirCooledChiller", "CatalogAirCooledChiller")
                        .WithMany("ItemAirCooledChillerCatalogAirCooledChillers")
                        .HasForeignKey("CatalogAirCooledChillerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Orion.Domain.EntityAirCooledCondenser.ItemAirCooledChiller", "ItemAirCooledChiller")
                        .WithMany("ItemAirCooledChillerCatalogAirCooledChillers")
                        .HasForeignKey("ItemAirCooledChillerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.EntityAirHandler.ItemAirHandlerCatalogAirHandler", b =>
                {
                    b.HasOne("Orion.Domain.EntityAirHandler.CatalogAirHandler", "CatalogAirHandler")
                        .WithMany("ItemAirHandlerCatalogAirHandlers")
                        .HasForeignKey("CatalogAirHandlerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Orion.Domain.EntityAirHandler.ItemAirHandler", "ItemAirHandler")
                        .WithMany("ItemAirHandlerCatalogAirHandlers")
                        .HasForeignKey("ItemAirHandlerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.EntityAirHandler.UnitItemAirHandler", b =>
                {
                    b.HasOne("Orion.Domain.EntityAirHandler.ItemAirHandler", "ItemAirHandlerUnit")
                        .WithMany("UnitItemAirHandlers")
                        .HasForeignKey("ItemAirHandlerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Orion.Domain.Entity.Unit", "Unit")
                        .WithMany("UnitItemAirHandlers")
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.EntityPump.ItemPumpCatalogPump", b =>
                {
                    b.HasOne("Orion.Domain.EntityPump.CatalogPump", "CatalogPump")
                        .WithMany("ItemPumpCatalogPumps")
                        .HasForeignKey("CatalogPumpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Orion.Domain.EntityPump.ItemPump", "ItemPump")
                        .WithMany("ItemPumpCatalogPumps")
                        .HasForeignKey("ItemPumpId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.EntityPump.UnitItemPump", b =>
                {
                    b.HasOne("Orion.Domain.EntityPump.ItemPump", "ItemPump")
                        .WithMany("UnitItemPumps")
                        .HasForeignKey("ItemPumpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Orion.Domain.Entity.Unit", "Unit")
                        .WithMany("UnitItemPumps")
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
