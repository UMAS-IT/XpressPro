// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Orion.DataAccess.DataBase;

namespace Orion.DataAccess.Migrations
{
    [DbContext(typeof(GlobalDbContext))]
    [Migration("20240208003822_mig-44")]
    partial class mig44
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.0-rtm-30799")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Orion.Domain.ABOVEAIR.Catalog.CatalogN1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CostMultiplier");

                    b.Property<int?>("DataSheetId");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<double>("SellMargin");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.ToTable("CatalogN1s");
                });

            modelBuilder.Entity("Orion.Domain.ABOVEAIR.Item.ItemN1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogN1Id");

                    b.Property<string>("Cfm");

                    b.Property<string>("CoolingCapacity");

                    b.Property<double>("CostMultiplier");

                    b.Property<int>("DesignIndex");

                    b.Property<double>("Freight");

                    b.Property<bool>("IsExcluded");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<bool>("OverridePrice");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuoteId");

                    b.Property<string>("Refrigerant");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Tag");

                    b.Property<string>("Voltage");

                    b.HasKey("Id");

                    b.HasIndex("CatalogN1Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("ItemN1s");
                });

            modelBuilder.Entity("Orion.Domain.AERCO.Catalog.CatalogO1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CostMultiplier");

                    b.Property<int?>("DataSheetId");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<double>("SellMargin");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.ToTable("CatalogO1s");
                });

            modelBuilder.Entity("Orion.Domain.AERCO.Catalog.CatalogO2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CostMultiplier");

                    b.Property<int?>("DataSheetId");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<double>("SellMargin");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.ToTable("CatalogO2s");
                });

            modelBuilder.Entity("Orion.Domain.AERCO.Item.ItemO1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Capacity");

                    b.Property<int?>("CatalogO1Id");

                    b.Property<double>("CostMultiplier");

                    b.Property<int>("DesignIndex");

                    b.Property<double>("Freight");

                    b.Property<string>("FuelType");

                    b.Property<bool>("IsExcluded");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<bool>("OverridePrice");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuoteId");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Tag");

                    b.Property<string>("Voltage");

                    b.HasKey("Id");

                    b.HasIndex("CatalogO1Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("ItemO1s");
                });

            modelBuilder.Entity("Orion.Domain.AERCO.Item.ItemO2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Capacity");

                    b.Property<int?>("CatalogO2Id");

                    b.Property<double>("CostMultiplier");

                    b.Property<int>("DesignIndex");

                    b.Property<double>("Freight");

                    b.Property<string>("FuelType");

                    b.Property<bool>("IsExcluded");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<bool>("OverridePrice");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuoteId");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Tag");

                    b.Property<string>("Voltage");

                    b.HasKey("Id");

                    b.HasIndex("CatalogO2Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("ItemO2s");
                });

            modelBuilder.Entity("Orion.Domain.AmericanWheatley.Related.CatalogC1ProductType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("CatalogC1ProductTypes");
                });

            modelBuilder.Entity("Orion.Domain.AmericanWheatley.Related.CatalogC3ProductType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("CatalogC3ProductTypes");
                });

            modelBuilder.Entity("Orion.Domain.Baldor.Catalog.CatalogP1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CostMultiplier");

                    b.Property<int?>("DataSheetId");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<double>("SellMargin");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.ToTable("CatalogP1s");
                });

            modelBuilder.Entity("Orion.Domain.Baldor.Item.ItemP1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogP1Id");

                    b.Property<double>("CostMultiplier");

                    b.Property<int>("DesignIndex");

                    b.Property<string>("Efficiency");

                    b.Property<string>("Enclosure");

                    b.Property<string>("Frame");

                    b.Property<double>("Freight");

                    b.Property<string>("Hp");

                    b.Property<bool>("IsExcluded");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<bool>("OverridePrice");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuoteId");

                    b.Property<string>("Rpm");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Tag");

                    b.Property<string>("Voltage");

                    b.Property<string>("Weight");

                    b.HasKey("Id");

                    b.HasIndex("CatalogP1Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("ItemP1s");
                });

            modelBuilder.Entity("Orion.Domain.Condair.Catalog.CatalogQ1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CostMultiplier");

                    b.Property<int?>("DataSheetId");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<double>("SellMargin");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.ToTable("CatalogQ1s");
                });

            modelBuilder.Entity("Orion.Domain.Condair.Catalog.CatalogQ2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CostMultiplier");

                    b.Property<int?>("DataSheetId");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<double>("SellMargin");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.ToTable("CatalogQ2s");
                });

            modelBuilder.Entity("Orion.Domain.Condair.Catalog.CatalogQ3", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CostMultiplier");

                    b.Property<int?>("DataSheetId");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<double>("SellMargin");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.ToTable("CatalogQ3s");
                });

            modelBuilder.Entity("Orion.Domain.Condair.Catalog.CatalogQ4", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CostMultiplier");

                    b.Property<int?>("DataSheetId");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<double>("SellMargin");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.ToTable("CatalogQ4s");
                });

            modelBuilder.Entity("Orion.Domain.Condair.Item.ItemQ1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Capacity");

                    b.Property<int?>("CatalogQ1Id");

                    b.Property<double>("CostMultiplier");

                    b.Property<int>("DesignIndex");

                    b.Property<double>("Freight");

                    b.Property<bool>("IsExcluded");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<bool>("OverridePrice");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuoteId");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Tag");

                    b.Property<string>("Voltage");

                    b.HasKey("Id");

                    b.HasIndex("CatalogQ1Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("ItemQ1s");
                });

            modelBuilder.Entity("Orion.Domain.Condair.Item.ItemQ2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogQ2Id");

                    b.Property<double>("CostMultiplier");

                    b.Property<int>("DesignIndex");

                    b.Property<double>("Freight");

                    b.Property<bool>("IsExcluded");

                    b.Property<string>("LbsHr");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<bool>("OverridePrice");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuoteId");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Tag");

                    b.Property<string>("Voltage");

                    b.Property<string>("WaterType");

                    b.HasKey("Id");

                    b.HasIndex("CatalogQ2Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("ItemQ2s");
                });

            modelBuilder.Entity("Orion.Domain.Condair.Item.ItemQ3", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogQ3Id");

                    b.Property<double>("CostMultiplier");

                    b.Property<int>("DesignIndex");

                    b.Property<double>("Freight");

                    b.Property<bool>("IsExcluded");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<bool>("OverridePrice");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuoteId");

                    b.Property<string>("RateCapacity");

                    b.Property<string>("RoSystemOutput");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Tag");

                    b.Property<string>("Voltage");

                    b.HasKey("Id");

                    b.HasIndex("CatalogQ3Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("ItemQ3s");
                });

            modelBuilder.Entity("Orion.Domain.Condair.Item.ItemQ4", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Capacity");

                    b.Property<int?>("CatalogQ4Id");

                    b.Property<double>("CostMultiplier");

                    b.Property<int>("DesignIndex");

                    b.Property<string>("Distributor");

                    b.Property<double>("Freight");

                    b.Property<bool>("IsExcluded");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<bool>("OverridePrice");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuoteId");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Tag");

                    b.Property<string>("Voltage");

                    b.HasKey("Id");

                    b.HasIndex("CatalogQ4Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("ItemQ4s");
                });

            modelBuilder.Entity("Orion.Domain.Entity.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<string>("Subfix");

                    b.HasKey("Id");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("Orion.Domain.Entity.DataSheet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ProductId");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("DataSheets");
                });

            modelBuilder.Entity("Orion.Domain.Entity.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("CanEditCatalogs");

                    b.Property<bool>("GeneralAccess");

                    b.Property<bool>("IsAdmin");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Permission");
                });

            modelBuilder.Entity("Orion.Domain.Entity.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Color");

                    b.Property<int>("CompanyId");

                    b.Property<bool>("InService");

                    b.Property<string>("Index");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Orion.Domain.Entity.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Addendum");

                    b.Property<string>("Contact");

                    b.Property<string>("Contractor");

                    b.Property<DateTime>("CreationDate");

                    b.Property<string>("Engineer");

                    b.Property<string>("Location");

                    b.Property<string>("Name");

                    b.Property<string>("Notes");

                    b.Property<int>("Number");

                    b.Property<DateTime>("PlansDate");

                    b.Property<string>("ProposalNumber");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("Orion.Domain.Entity.Quote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<int>("ProjectId");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("Quotes");
                });

            modelBuilder.Entity("Orion.Domain.Entity.QuoteCompanies", b =>
                {
                    b.Property<int>("QuoteId");

                    b.Property<int>("CompanyId");

                    b.Property<int>("DesignIndex");

                    b.HasKey("QuoteId", "CompanyId");

                    b.HasIndex("CompanyId");

                    b.ToTable("QuoteCompanies");
                });

            modelBuilder.Entity("Orion.Domain.Entity.Spec", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Highlighted");

                    b.Property<string>("Name");

                    b.Property<double>("Price");

                    b.Property<int>("TitleId");

                    b.HasKey("Id");

                    b.HasIndex("TitleId");

                    b.ToTable("Specs");
                });

            modelBuilder.Entity("Orion.Domain.Entity.Title", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DataSheetId");

                    b.Property<bool>("Highlighted");

                    b.Property<int?>("ItemA1Id");

                    b.Property<int?>("ItemA2Id");

                    b.Property<int?>("ItemA3Id");

                    b.Property<int?>("ItemA4Id");

                    b.Property<int?>("ItemAA1Id");

                    b.Property<int?>("ItemB1Id");

                    b.Property<int?>("ItemB2Id");

                    b.Property<int?>("ItemB3Id");

                    b.Property<int?>("ItemB4Id");

                    b.Property<int?>("ItemB5Id");

                    b.Property<int?>("ItemC1Id");

                    b.Property<int?>("ItemC2Id");

                    b.Property<int?>("ItemC3Id");

                    b.Property<int?>("ItemC4Id");

                    b.Property<int?>("ItemC5Id");

                    b.Property<int?>("ItemC6Id");

                    b.Property<int?>("ItemC7Id");

                    b.Property<int?>("ItemD1Id");

                    b.Property<int?>("ItemD2Id");

                    b.Property<int?>("ItemE1Id");

                    b.Property<int?>("ItemE2Id");

                    b.Property<int?>("ItemE3Id");

                    b.Property<int?>("ItemE4Id");

                    b.Property<int?>("ItemE5Id");

                    b.Property<int?>("ItemE6Id");

                    b.Property<int?>("ItemE7Id");

                    b.Property<int?>("ItemF1Id");

                    b.Property<int?>("ItemG1Id");

                    b.Property<int?>("ItemG2Id");

                    b.Property<int?>("ItemG3Id");

                    b.Property<int?>("ItemG4Id");

                    b.Property<int?>("ItemG5Id");

                    b.Property<int?>("ItemG6Id");

                    b.Property<int?>("ItemH1Id");

                    b.Property<int?>("ItemH2Id");

                    b.Property<int?>("ItemH3Id");

                    b.Property<int?>("ItemH4Id");

                    b.Property<int?>("ItemH5Id");

                    b.Property<int?>("ItemI1Id");

                    b.Property<int?>("ItemI2Id");

                    b.Property<int?>("ItemJ1Id");

                    b.Property<int?>("ItemK1Id");

                    b.Property<int?>("ItemK2Id");

                    b.Property<int?>("ItemK3Id");

                    b.Property<int?>("ItemL1Id");

                    b.Property<int?>("ItemM1Id");

                    b.Property<int?>("ItemN1Id");

                    b.Property<int?>("ItemO1Id");

                    b.Property<int?>("ItemO2Id");

                    b.Property<int?>("ItemP1Id");

                    b.Property<int?>("ItemQ1Id");

                    b.Property<int?>("ItemQ2Id");

                    b.Property<int?>("ItemQ3Id");

                    b.Property<int?>("ItemQ4Id");

                    b.Property<int?>("ItemR1Id");

                    b.Property<int?>("ItemR2Id");

                    b.Property<int?>("ItemR3Id");

                    b.Property<int?>("ItemR4Id");

                    b.Property<int?>("ItemS1Id");

                    b.Property<int?>("ItemT1Id");

                    b.Property<int?>("ItemT2Id");

                    b.Property<int?>("ItemT3Id");

                    b.Property<int?>("ItemU1Id");

                    b.Property<int?>("ItemV1Id");

                    b.Property<int?>("ItemW1Id");

                    b.Property<int?>("ItemX1Id");

                    b.Property<int?>("ItemX2Id");

                    b.Property<int?>("ItemX3Id");

                    b.Property<int?>("ItemX4Id");

                    b.Property<int?>("ItemX5Id");

                    b.Property<int?>("ItemY1Id");

                    b.Property<int?>("ItemZ1Id");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.HasIndex("ItemA1Id");

                    b.HasIndex("ItemA2Id");

                    b.HasIndex("ItemA3Id");

                    b.HasIndex("ItemA4Id");

                    b.HasIndex("ItemAA1Id");

                    b.HasIndex("ItemB1Id");

                    b.HasIndex("ItemB2Id");

                    b.HasIndex("ItemB3Id");

                    b.HasIndex("ItemB4Id");

                    b.HasIndex("ItemB5Id");

                    b.HasIndex("ItemC1Id");

                    b.HasIndex("ItemC2Id");

                    b.HasIndex("ItemC3Id");

                    b.HasIndex("ItemC4Id");

                    b.HasIndex("ItemC5Id");

                    b.HasIndex("ItemC6Id");

                    b.HasIndex("ItemC7Id");

                    b.HasIndex("ItemD1Id");

                    b.HasIndex("ItemD2Id");

                    b.HasIndex("ItemE1Id");

                    b.HasIndex("ItemE2Id");

                    b.HasIndex("ItemE3Id");

                    b.HasIndex("ItemE4Id");

                    b.HasIndex("ItemE5Id");

                    b.HasIndex("ItemE6Id");

                    b.HasIndex("ItemE7Id");

                    b.HasIndex("ItemF1Id");

                    b.HasIndex("ItemG1Id");

                    b.HasIndex("ItemG2Id");

                    b.HasIndex("ItemG3Id");

                    b.HasIndex("ItemG4Id");

                    b.HasIndex("ItemG5Id");

                    b.HasIndex("ItemG6Id");

                    b.HasIndex("ItemH1Id");

                    b.HasIndex("ItemH2Id");

                    b.HasIndex("ItemH3Id");

                    b.HasIndex("ItemH4Id");

                    b.HasIndex("ItemH5Id");

                    b.HasIndex("ItemI1Id");

                    b.HasIndex("ItemI2Id");

                    b.HasIndex("ItemJ1Id");

                    b.HasIndex("ItemK1Id");

                    b.HasIndex("ItemK2Id");

                    b.HasIndex("ItemK3Id");

                    b.HasIndex("ItemL1Id");

                    b.HasIndex("ItemM1Id");

                    b.HasIndex("ItemN1Id");

                    b.HasIndex("ItemO1Id");

                    b.HasIndex("ItemO2Id");

                    b.HasIndex("ItemP1Id");

                    b.HasIndex("ItemQ1Id");

                    b.HasIndex("ItemQ2Id");

                    b.HasIndex("ItemQ3Id");

                    b.HasIndex("ItemQ4Id");

                    b.HasIndex("ItemR1Id");

                    b.HasIndex("ItemR2Id");

                    b.HasIndex("ItemR3Id");

                    b.HasIndex("ItemR4Id");

                    b.HasIndex("ItemS1Id");

                    b.HasIndex("ItemT1Id");

                    b.HasIndex("ItemT2Id");

                    b.HasIndex("ItemT3Id");

                    b.HasIndex("ItemU1Id");

                    b.HasIndex("ItemV1Id");

                    b.HasIndex("ItemW1Id");

                    b.HasIndex("ItemX1Id");

                    b.HasIndex("ItemX2Id");

                    b.HasIndex("ItemX3Id");

                    b.HasIndex("ItemX4Id");

                    b.HasIndex("ItemX5Id");

                    b.HasIndex("ItemY1Id");

                    b.HasIndex("ItemZ1Id");

                    b.ToTable("Titles");
                });

            modelBuilder.Entity("Orion.Domain.Entity.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email");

                    b.Property<string>("LoginName");

                    b.Property<string>("Name");

                    b.Property<string>("PassKey");

                    b.Property<string>("Telephone");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogABB.CatalogB1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Bypass");

                    b.Property<bool>("CircuitBreakerDisconnect");

                    b.Property<double>("CostMultiplier");

                    b.Property<int?>("DataSheetId");

                    b.Property<string>("Description");

                    b.Property<double>("Hp");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<string>("Nema");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Voltage");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.ToTable("CatalogB1s");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogABB.CatalogB2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Bypass");

                    b.Property<bool>("CircuitBreakerDisconnect");

                    b.Property<double>("CostMultiplier");

                    b.Property<int?>("DataSheetId");

                    b.Property<string>("Description");

                    b.Property<double>("Hp");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<string>("Nema");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Voltage");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.ToTable("CatalogB2s");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogABB.CatalogB3", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Bypass");

                    b.Property<bool>("CircuitBreakerDisconnect");

                    b.Property<double>("CostMultiplier");

                    b.Property<int?>("DataSheetId");

                    b.Property<string>("Description");

                    b.Property<double>("Hp");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<string>("Nema");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Voltage");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.ToTable("CatalogB3s");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogABB.CatalogB4", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Bypass");

                    b.Property<bool>("CircuitBreakerDisconnect");

                    b.Property<double>("CostMultiplier");

                    b.Property<int?>("DataSheetId");

                    b.Property<string>("Description");

                    b.Property<double>("Hp");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<string>("Nema");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Voltage");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.ToTable("CatalogB4s");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogABB.CatalogB5", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CostMultiplier");

                    b.Property<int?>("DataSheetId");

                    b.Property<string>("Description");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<double>("SellMargin");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.ToTable("CatalogB5s");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogAmericanWheatley.CatalogC1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogC1ProductTypeId");

                    b.Property<double>("CostMultiplier");

                    b.Property<int?>("DataSheetId");

                    b.Property<string>("Description");

                    b.Property<string>("EndConnection");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<double>("SellMargin");

                    b.Property<string>("ShippingWeight");

                    b.Property<string>("Size");

                    b.HasKey("Id");

                    b.HasIndex("CatalogC1ProductTypeId");

                    b.HasIndex("DataSheetId");

                    b.ToTable("CatalogC1s");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogAmericanWheatley.CatalogC2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CostMultiplier");

                    b.Property<int?>("DataSheetId");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<string>("PumpFlange");

                    b.Property<double>("SellMargin");

                    b.Property<string>("ShippingWeight");

                    b.Property<string>("SystemFlange");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.ToTable("CatalogC2s");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogAmericanWheatley.CatalogC3", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AcceptableVolume");

                    b.Property<int?>("CatalogC3ProductTypeId");

                    b.Property<double>("CostMultiplier");

                    b.Property<int?>("DataSheetId");

                    b.Property<string>("DiameterA");

                    b.Property<string>("HeightB");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<string>("PartNumber");

                    b.Property<double>("SellMargin");

                    b.Property<string>("SystemConnect");

                    b.Property<string>("Weight");

                    b.Property<string>("WorkingPressure");

                    b.HasKey("Id");

                    b.HasIndex("CatalogC3ProductTypeId");

                    b.HasIndex("DataSheetId");

                    b.ToTable("CatalogC3s");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogAmericanWheatley.CatalogC4", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AcceptableVolume");

                    b.Property<double>("CostMultiplier");

                    b.Property<int?>("DataSheetId");

                    b.Property<string>("DiameterA");

                    b.Property<string>("HeightB");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<string>("PartNumber");

                    b.Property<double>("SellMargin");

                    b.Property<string>("SystemConnect");

                    b.Property<string>("Weight");

                    b.Property<string>("WorkingPressure");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.ToTable("CatalogC4s");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogAmericanWheatley.CatalogC5", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CostMultiplier");

                    b.Property<int?>("DataSheetId");

                    b.Property<string>("Description");

                    b.Property<string>("DiameterB");

                    b.Property<string>("HeightA");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Volume");

                    b.Property<string>("Weight");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.ToTable("CatalogC5s");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogAmericanWheatley.CatalogC6", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CostMultiplier");

                    b.Property<int?>("DataSheetId");

                    b.Property<string>("Description");

                    b.Property<string>("DiameterB");

                    b.Property<string>("HeightA");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Volume");

                    b.Property<string>("Weight");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.ToTable("CatalogC6s");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogAmericanWheatley.CatalogC7", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CostMultiplier");

                    b.Property<int?>("DataSheetId");

                    b.Property<string>("Description");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<double>("SellMargin");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.ToTable("CatalogC7s");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogBACClosedLoopTowers.CatalogH1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CostMultiplier");

                    b.Property<int?>("DataSheetId");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<double>("SellMargin");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.ToTable("CatalogH1s");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogBACClosedLoopTowers.CatalogH2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CostMultiplier");

                    b.Property<int?>("DataSheetId");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<double>("SellMargin");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.ToTable("CatalogH2s");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogBACClosedLoopTowers.CatalogH3", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CostMultiplier");

                    b.Property<int?>("DataSheetId");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<double>("SellMargin");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.ToTable("CatalogH3s");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogBACClosedLoopTowers.CatalogH4", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CostMultiplier");

                    b.Property<int?>("DataSheetId");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<double>("SellMargin");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.ToTable("CatalogH4s");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogBACClosedLoopTowers.CatalogH5", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CostMultiplier");

                    b.Property<int?>("DataSheetId");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<double>("SellMargin");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.ToTable("CatalogH5s");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogBACOpenLoopTowers.CatalogG1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CostMultiplier");

                    b.Property<int?>("DataSheetId");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<double>("SellMargin");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.ToTable("CatalogG1s");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogBACOpenLoopTowers.CatalogG2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CostMultiplier");

                    b.Property<int?>("DataSheetId");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<double>("SellMargin");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.ToTable("CatalogG2s");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogBACOpenLoopTowers.CatalogG3", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CostMultiplier");

                    b.Property<int?>("DataSheetId");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<double>("SellMargin");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.ToTable("CatalogG3s");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogBACOpenLoopTowers.CatalogG4", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CostMultiplier");

                    b.Property<int?>("DataSheetId");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<double>("SellMargin");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.ToTable("CatalogG4s");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogBACOpenLoopTowers.CatalogG5", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CostMultiplier");

                    b.Property<int?>("DataSheetId");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<double>("SellMargin");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.ToTable("CatalogG5s");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogBACOpenLoopTowers.CatalogG6", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CostMultiplier");

                    b.Property<int?>("DataSheetId");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<double>("SellMargin");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.ToTable("CatalogG6s");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogGeneralProduct.CatalogL1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CostMultiplier");

                    b.Property<int?>("DataSheetId");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<double>("SellMargin");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.ToTable("CatalogL1s");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogGroundfos.CatalogE1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CostMultiplier");

                    b.Property<int?>("DataSheetId");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<double>("SellMargin");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.ToTable("CatalogE1s");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogGroundfos.CatalogE2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CostMultiplier");

                    b.Property<int?>("DataSheetId");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<double>("SellMargin");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.ToTable("CatalogE2s");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogGroundfos.CatalogE3", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CostMultiplier");

                    b.Property<int?>("DataSheetId");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<double>("SellMargin");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.ToTable("CatalogE3s");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogGroundfos.CatalogE4", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CostMultiplier");

                    b.Property<int?>("DataSheetId");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<double>("SellMargin");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.ToTable("CatalogE4s");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogGroundfos.CatalogE5", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CostMultiplier");

                    b.Property<int?>("DataSheetId");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<double>("SellMargin");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.ToTable("CatalogE5s");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogGroundfos.CatalogE6", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CostMultiplier");

                    b.Property<int?>("DataSheetId");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<double>("SellMargin");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.ToTable("CatalogE6s");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogGroundfos.CatalogE7", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CostMultiplier");

                    b.Property<int?>("DataSheetId");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<double>("SellMargin");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.ToTable("CatalogE7s");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogPuroflux.CatalogD1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CostMultiplier");

                    b.Property<int?>("DataSheetId");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<double>("SellMargin");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.ToTable("CatalogD1s");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogPuroflux.CatalogD2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CostMultiplier");

                    b.Property<int?>("DataSheetId");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<double>("SellMargin");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.ToTable("CatalogD2s");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogQuantech.CatalogA1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CostMultiplier");

                    b.Property<int?>("DataSheetId");

                    b.Property<string>("Description");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<double>("SellMargin");

                    b.Property<string>("UnitSize");

                    b.Property<string>("Voltage");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.ToTable("CatalogA1s");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogQuantech.CatalogA2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CostMultiplier");

                    b.Property<int?>("DataSheetId");

                    b.Property<string>("Description");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<double>("SellMargin");

                    b.Property<string>("UnitSize");

                    b.Property<string>("Voltage");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.ToTable("CatalogA2s");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogQuantech.CatalogA3", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CostMultiplier");

                    b.Property<int?>("DataSheetId");

                    b.Property<string>("Description");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<double>("SellMargin");

                    b.Property<string>("UnitSize");

                    b.Property<string>("Voltage");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.ToTable("CatalogA3s");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogQuantech.CatalogA4", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CostMultiplier");

                    b.Property<int?>("DataSheetId");

                    b.Property<string>("Description");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<double>("SellMargin");

                    b.Property<string>("UnitSize");

                    b.Property<string>("Voltage");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.ToTable("CatalogA4s");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogUvResources.CatalogF1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogF1ProductTypeId");

                    b.Property<double>("CostMultiplier");

                    b.Property<int?>("DataSheetId");

                    b.Property<string>("Description");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<string>("PartNumber");

                    b.Property<double>("SellMargin");

                    b.HasKey("Id");

                    b.HasIndex("CatalogF1ProductTypeId");

                    b.HasIndex("DataSheetId");

                    b.ToTable("CatalogF1s");
                });

            modelBuilder.Entity("Orion.Domain.EntityItem.ItemA1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogA1Id");

                    b.Property<double>("CostMultiplier");

                    b.Property<int>("DesignIndex");

                    b.Property<double>("Freight");

                    b.Property<bool>("IsExcluded");

                    b.Property<double>("ListPrice");

                    b.Property<bool>("OverridePrice");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuoteId");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Tag");

                    b.Property<string>("Tons");

                    b.HasKey("Id");

                    b.HasIndex("CatalogA1Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("ItemA1s");
                });

            modelBuilder.Entity("Orion.Domain.EntityItem.ItemA2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogA2Id");

                    b.Property<double>("CostMultiplier");

                    b.Property<int>("DesignIndex");

                    b.Property<double>("Freight");

                    b.Property<bool>("IsExcluded");

                    b.Property<double>("ListPrice");

                    b.Property<bool>("OverridePrice");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuoteId");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Tag");

                    b.Property<string>("Tons");

                    b.HasKey("Id");

                    b.HasIndex("CatalogA2Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("ItemA2s");
                });

            modelBuilder.Entity("Orion.Domain.EntityItem.ItemA3", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogA3Id");

                    b.Property<double>("CostMultiplier");

                    b.Property<int>("DesignIndex");

                    b.Property<double>("Freight");

                    b.Property<bool>("IsExcluded");

                    b.Property<double>("ListPrice");

                    b.Property<bool>("OverridePrice");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuoteId");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Tag");

                    b.Property<string>("Tons");

                    b.HasKey("Id");

                    b.HasIndex("CatalogA3Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("ItemA3s");
                });

            modelBuilder.Entity("Orion.Domain.EntityItem.ItemA4", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogA4Id");

                    b.Property<double>("CostMultiplier");

                    b.Property<int>("DesignIndex");

                    b.Property<double>("Freight");

                    b.Property<bool>("IsExcluded");

                    b.Property<double>("ListPrice");

                    b.Property<bool>("OverridePrice");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuoteId");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Tag");

                    b.Property<string>("Tons");

                    b.HasKey("Id");

                    b.HasIndex("CatalogA4Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("ItemA4s");
                });

            modelBuilder.Entity("Orion.Domain.EntityItemABB.ItemB1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogB1Id");

                    b.Property<double>("CostMultiplier");

                    b.Property<int>("DesignIndex");

                    b.Property<double>("Freight");

                    b.Property<bool>("IsExcluded");

                    b.Property<double>("ListPrice");

                    b.Property<bool>("OverridePrice");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuoteId");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Tag");

                    b.HasKey("Id");

                    b.HasIndex("CatalogB1Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("ItemB1s");
                });

            modelBuilder.Entity("Orion.Domain.EntityItemABB.ItemB2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogB2Id");

                    b.Property<double>("CostMultiplier");

                    b.Property<int>("DesignIndex");

                    b.Property<double>("Freight");

                    b.Property<bool>("IsExcluded");

                    b.Property<double>("ListPrice");

                    b.Property<bool>("OverridePrice");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuoteId");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Tag");

                    b.HasKey("Id");

                    b.HasIndex("CatalogB2Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("ItemB2s");
                });

            modelBuilder.Entity("Orion.Domain.EntityItemABB.ItemB3", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogB3Id");

                    b.Property<double>("CostMultiplier");

                    b.Property<int>("DesignIndex");

                    b.Property<double>("Freight");

                    b.Property<bool>("IsExcluded");

                    b.Property<double>("ListPrice");

                    b.Property<bool>("OverridePrice");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuoteId");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Tag");

                    b.HasKey("Id");

                    b.HasIndex("CatalogB3Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("ItemB3s");
                });

            modelBuilder.Entity("Orion.Domain.EntityItemABB.ItemB4", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogB4Id");

                    b.Property<double>("CostMultiplier");

                    b.Property<int>("DesignIndex");

                    b.Property<double>("Freight");

                    b.Property<bool>("IsExcluded");

                    b.Property<double>("ListPrice");

                    b.Property<bool>("OverridePrice");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuoteId");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Tag");

                    b.HasKey("Id");

                    b.HasIndex("CatalogB4Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("ItemB4s");
                });

            modelBuilder.Entity("Orion.Domain.EntityItemABB.ItemB5", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogB5Id");

                    b.Property<double>("CostMultiplier");

                    b.Property<int>("DesignIndex");

                    b.Property<double>("Freight");

                    b.Property<bool>("IsExcluded");

                    b.Property<double>("ListPrice");

                    b.Property<bool>("OverridePrice");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuoteId");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Tag");

                    b.HasKey("Id");

                    b.HasIndex("CatalogB5Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("ItemB5s");
                });

            modelBuilder.Entity("Orion.Domain.EntityItemAmericanWheatley.ItemC1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogC1Id");

                    b.Property<double>("CostMultiplier");

                    b.Property<int>("DesignIndex");

                    b.Property<double>("Freight");

                    b.Property<bool>("IsExcluded");

                    b.Property<double>("ListPrice");

                    b.Property<bool>("OverridePrice");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuoteId");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Tag");

                    b.HasKey("Id");

                    b.HasIndex("CatalogC1Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("ItemC1s");
                });

            modelBuilder.Entity("Orion.Domain.EntityItemAmericanWheatley.ItemC2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogC2Id");

                    b.Property<double>("CostMultiplier");

                    b.Property<int>("DesignIndex");

                    b.Property<double>("Freight");

                    b.Property<bool>("IsExcluded");

                    b.Property<double>("ListPrice");

                    b.Property<bool>("OverridePrice");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuoteId");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Tag");

                    b.HasKey("Id");

                    b.HasIndex("CatalogC2Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("ItemC2s");
                });

            modelBuilder.Entity("Orion.Domain.EntityItemAmericanWheatley.ItemC3", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogC3Id");

                    b.Property<double>("CostMultiplier");

                    b.Property<int>("DesignIndex");

                    b.Property<double>("Freight");

                    b.Property<bool>("IsExcluded");

                    b.Property<double>("ListPrice");

                    b.Property<bool>("OverridePrice");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuoteId");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Tag");

                    b.HasKey("Id");

                    b.HasIndex("CatalogC3Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("ItemC3s");
                });

            modelBuilder.Entity("Orion.Domain.EntityItemAmericanWheatley.ItemC4", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogC4Id");

                    b.Property<double>("CostMultiplier");

                    b.Property<int>("DesignIndex");

                    b.Property<double>("Freight");

                    b.Property<bool>("IsExcluded");

                    b.Property<double>("ListPrice");

                    b.Property<bool>("OverridePrice");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuoteId");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Tag");

                    b.HasKey("Id");

                    b.HasIndex("CatalogC4Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("ItemC4s");
                });

            modelBuilder.Entity("Orion.Domain.EntityItemAmericanWheatley.ItemC5", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogC5Id");

                    b.Property<double>("CostMultiplier");

                    b.Property<int>("DesignIndex");

                    b.Property<double>("Freight");

                    b.Property<bool>("IsExcluded");

                    b.Property<double>("ListPrice");

                    b.Property<bool>("OverridePrice");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuoteId");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Tag");

                    b.HasKey("Id");

                    b.HasIndex("CatalogC5Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("ItemC5s");
                });

            modelBuilder.Entity("Orion.Domain.EntityItemAmericanWheatley.ItemC6", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogC6Id");

                    b.Property<double>("CostMultiplier");

                    b.Property<int>("DesignIndex");

                    b.Property<double>("Freight");

                    b.Property<bool>("IsExcluded");

                    b.Property<double>("ListPrice");

                    b.Property<bool>("OverridePrice");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuoteId");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Tag");

                    b.HasKey("Id");

                    b.HasIndex("CatalogC6Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("ItemC6s");
                });

            modelBuilder.Entity("Orion.Domain.EntityItemAmericanWheatley.ItemC7", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogC7Id");

                    b.Property<double>("CostMultiplier");

                    b.Property<int>("DesignIndex");

                    b.Property<double>("Freight");

                    b.Property<bool>("IsExcluded");

                    b.Property<double>("ListPrice");

                    b.Property<bool>("OverridePrice");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuoteId");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Tag");

                    b.HasKey("Id");

                    b.HasIndex("CatalogC7Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("ItemC7s");
                });

            modelBuilder.Entity("Orion.Domain.EntityItemBACClosedLoopTowers.ItemH1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogH1Id");

                    b.Property<double>("CostMultiplier");

                    b.Property<int>("DesignIndex");

                    b.Property<string>("DesignWB");

                    b.Property<string>("FanMotors");

                    b.Property<string>("FlowRate");

                    b.Property<string>("FluidPressureDrop");

                    b.Property<double>("Freight");

                    b.Property<bool>("IsExcluded");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<bool>("OverridePrice");

                    b.Property<string>("PumpMotor");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuoteId");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Tag");

                    b.Property<string>("Voltage");

                    b.Property<string>("WaterTemp");

                    b.HasKey("Id");

                    b.HasIndex("CatalogH1Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("ItemH1s");
                });

            modelBuilder.Entity("Orion.Domain.EntityItemBACClosedLoopTowers.ItemH2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogH2Id");

                    b.Property<double>("CostMultiplier");

                    b.Property<int>("DesignIndex");

                    b.Property<string>("DesignWB");

                    b.Property<string>("FanMotors");

                    b.Property<string>("FlowRate");

                    b.Property<string>("FluidPressureDrop");

                    b.Property<double>("Freight");

                    b.Property<bool>("IsExcluded");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<bool>("OverridePrice");

                    b.Property<string>("PumpMotor");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuoteId");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Tag");

                    b.Property<string>("Voltage");

                    b.Property<string>("WaterTemp");

                    b.HasKey("Id");

                    b.HasIndex("CatalogH2Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("ItemH2s");
                });

            modelBuilder.Entity("Orion.Domain.EntityItemBACClosedLoopTowers.ItemH3", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogH3Id");

                    b.Property<double>("CostMultiplier");

                    b.Property<int>("DesignIndex");

                    b.Property<string>("DesignWB");

                    b.Property<string>("FanMotors");

                    b.Property<string>("FlowRate");

                    b.Property<string>("FluidPressureDrop");

                    b.Property<double>("Freight");

                    b.Property<bool>("IsExcluded");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<bool>("OverridePrice");

                    b.Property<string>("PumpMotor");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuoteId");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Tag");

                    b.Property<string>("Voltage");

                    b.Property<string>("WaterTemp");

                    b.HasKey("Id");

                    b.HasIndex("CatalogH3Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("ItemH3s");
                });

            modelBuilder.Entity("Orion.Domain.EntityItemBACClosedLoopTowers.ItemH4", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogH4Id");

                    b.Property<double>("CostMultiplier");

                    b.Property<int>("DesignIndex");

                    b.Property<string>("DesignWB");

                    b.Property<string>("FanMotors");

                    b.Property<string>("FlowRate");

                    b.Property<string>("FluidPressureDrop");

                    b.Property<double>("Freight");

                    b.Property<bool>("IsExcluded");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<bool>("OverridePrice");

                    b.Property<string>("PumpMotor");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuoteId");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Tag");

                    b.Property<string>("Voltage");

                    b.Property<string>("WaterTemp");

                    b.HasKey("Id");

                    b.HasIndex("CatalogH4Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("ItemH4s");
                });

            modelBuilder.Entity("Orion.Domain.EntityItemBACClosedLoopTowers.ItemH5", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogH5Id");

                    b.Property<double>("CostMultiplier");

                    b.Property<int>("DesignIndex");

                    b.Property<string>("DesignWB");

                    b.Property<string>("FanMotors");

                    b.Property<string>("FlowRate");

                    b.Property<string>("FluidPressureDrop");

                    b.Property<double>("Freight");

                    b.Property<bool>("IsExcluded");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<bool>("OverridePrice");

                    b.Property<string>("PumpMotor");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuoteId");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Tag");

                    b.Property<string>("Voltage");

                    b.Property<string>("WaterTemp");

                    b.HasKey("Id");

                    b.HasIndex("CatalogH5Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("ItemH5s");
                });

            modelBuilder.Entity("Orion.Domain.EntityItemBACOpenLoopTowers.ItemG1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogG1Id");

                    b.Property<double>("CostMultiplier");

                    b.Property<int>("DesignIndex");

                    b.Property<string>("DesignWB");

                    b.Property<string>("FanMotors");

                    b.Property<string>("FlowRate");

                    b.Property<string>("FluidPressureDrop");

                    b.Property<double>("Freight");

                    b.Property<bool>("IsExcluded");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<bool>("OverridePrice");

                    b.Property<string>("PumpMotor");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuoteId");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Tag");

                    b.Property<string>("Voltage");

                    b.Property<string>("WaterTemp");

                    b.HasKey("Id");

                    b.HasIndex("CatalogG1Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("ItemG1s");
                });

            modelBuilder.Entity("Orion.Domain.EntityItemBACOpenLoopTowers.ItemG2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogG2Id");

                    b.Property<double>("CostMultiplier");

                    b.Property<int>("DesignIndex");

                    b.Property<string>("DesignWB");

                    b.Property<string>("FanMotors");

                    b.Property<string>("FlowRate");

                    b.Property<string>("FluidPressureDrop");

                    b.Property<double>("Freight");

                    b.Property<bool>("IsExcluded");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<bool>("OverridePrice");

                    b.Property<string>("PumpMotor");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuoteId");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Tag");

                    b.Property<string>("Voltage");

                    b.Property<string>("WaterTemp");

                    b.HasKey("Id");

                    b.HasIndex("CatalogG2Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("ItemG2s");
                });

            modelBuilder.Entity("Orion.Domain.EntityItemBACOpenLoopTowers.ItemG3", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogG3Id");

                    b.Property<double>("CostMultiplier");

                    b.Property<int>("DesignIndex");

                    b.Property<string>("DesignWB");

                    b.Property<string>("FanMotors");

                    b.Property<string>("FlowRate");

                    b.Property<string>("FluidPressureDrop");

                    b.Property<double>("Freight");

                    b.Property<bool>("IsExcluded");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<bool>("OverridePrice");

                    b.Property<string>("PumpMotor");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuoteId");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Tag");

                    b.Property<string>("Voltage");

                    b.Property<string>("WaterTemp");

                    b.HasKey("Id");

                    b.HasIndex("CatalogG3Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("ItemG3s");
                });

            modelBuilder.Entity("Orion.Domain.EntityItemBACOpenLoopTowers.ItemG4", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogG4Id");

                    b.Property<double>("CostMultiplier");

                    b.Property<int>("DesignIndex");

                    b.Property<string>("DesignWB");

                    b.Property<string>("FanMotors");

                    b.Property<string>("FlowRate");

                    b.Property<string>("FluidPressureDrop");

                    b.Property<double>("Freight");

                    b.Property<bool>("IsExcluded");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<bool>("OverridePrice");

                    b.Property<string>("PumpMotor");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuoteId");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Tag");

                    b.Property<string>("Voltage");

                    b.Property<string>("WaterTemp");

                    b.HasKey("Id");

                    b.HasIndex("CatalogG4Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("ItemG4s");
                });

            modelBuilder.Entity("Orion.Domain.EntityItemBACOpenLoopTowers.ItemG5", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogG5Id");

                    b.Property<double>("CostMultiplier");

                    b.Property<int>("DesignIndex");

                    b.Property<string>("DesignWB");

                    b.Property<string>("FanMotors");

                    b.Property<string>("FlowRate");

                    b.Property<string>("FluidPressureDrop");

                    b.Property<double>("Freight");

                    b.Property<bool>("IsExcluded");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<bool>("OverridePrice");

                    b.Property<string>("PumpMotor");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuoteId");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Tag");

                    b.Property<string>("Voltage");

                    b.Property<string>("WaterTemp");

                    b.HasKey("Id");

                    b.HasIndex("CatalogG5Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("ItemG5s");
                });

            modelBuilder.Entity("Orion.Domain.EntityItemBACOpenLoopTowers.ItemG6", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogG6Id");

                    b.Property<double>("CostMultiplier");

                    b.Property<int>("DesignIndex");

                    b.Property<string>("DesignWB");

                    b.Property<string>("FanMotors");

                    b.Property<string>("FlowRate");

                    b.Property<string>("FluidPressureDrop");

                    b.Property<double>("Freight");

                    b.Property<bool>("IsExcluded");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<bool>("OverridePrice");

                    b.Property<string>("PumpMotor");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuoteId");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Tag");

                    b.Property<string>("Voltage");

                    b.Property<string>("WaterTemp");

                    b.HasKey("Id");

                    b.HasIndex("CatalogG6Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("ItemG6s");
                });

            modelBuilder.Entity("Orion.Domain.EntityItemGeneralProduct.ItemL1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogL1Id");

                    b.Property<double>("CostMultiplier");

                    b.Property<string>("Description");

                    b.Property<int>("DesignIndex");

                    b.Property<double>("Freight");

                    b.Property<bool>("IsExcluded");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<bool>("OverridePrice");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuoteId");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Tag");

                    b.HasKey("Id");

                    b.HasIndex("CatalogL1Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("ItemL1s");
                });

            modelBuilder.Entity("Orion.Domain.EntityItemGroundfos.ItemE1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogE1Id");

                    b.Property<double>("CostMultiplier");

                    b.Property<int>("DesignIndex");

                    b.Property<string>("Electrical");

                    b.Property<double>("Freight");

                    b.Property<string>("Gpm");

                    b.Property<string>("Hp");

                    b.Property<bool>("IsExcluded");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<string>("Motor");

                    b.Property<bool>("OverridePrice");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuoteId");

                    b.Property<string>("Rpm");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Tag");

                    b.Property<string>("Tdh");

                    b.HasKey("Id");

                    b.HasIndex("CatalogE1Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("ItemE1s");
                });

            modelBuilder.Entity("Orion.Domain.EntityItemGroundfos.ItemE2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogE2Id");

                    b.Property<double>("CostMultiplier");

                    b.Property<int>("DesignIndex");

                    b.Property<string>("Electrical");

                    b.Property<double>("Freight");

                    b.Property<string>("Gpm");

                    b.Property<string>("Hp");

                    b.Property<bool>("IsExcluded");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<string>("Motor");

                    b.Property<bool>("OverridePrice");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuoteId");

                    b.Property<string>("Rpm");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Tag");

                    b.Property<string>("Tdh");

                    b.HasKey("Id");

                    b.HasIndex("CatalogE2Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("ItemE2s");
                });

            modelBuilder.Entity("Orion.Domain.EntityItemGroundfos.ItemE3", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogE3Id");

                    b.Property<double>("CostMultiplier");

                    b.Property<int>("DesignIndex");

                    b.Property<string>("Electrical");

                    b.Property<double>("Freight");

                    b.Property<string>("Gpm");

                    b.Property<string>("Hp");

                    b.Property<bool>("IsExcluded");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<string>("Motor");

                    b.Property<bool>("OverridePrice");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuoteId");

                    b.Property<string>("Rpm");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Tag");

                    b.Property<string>("Tdh");

                    b.HasKey("Id");

                    b.HasIndex("CatalogE3Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("ItemE3s");
                });

            modelBuilder.Entity("Orion.Domain.EntityItemGroundfos.ItemE4", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogE4Id");

                    b.Property<double>("CostMultiplier");

                    b.Property<int>("DesignIndex");

                    b.Property<string>("Electrical");

                    b.Property<double>("Freight");

                    b.Property<string>("Gpm");

                    b.Property<string>("Hp");

                    b.Property<bool>("IsExcluded");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<string>("Motor");

                    b.Property<bool>("OverridePrice");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuoteId");

                    b.Property<string>("Rpm");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Tag");

                    b.Property<string>("Tdh");

                    b.HasKey("Id");

                    b.HasIndex("CatalogE4Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("ItemE4s");
                });

            modelBuilder.Entity("Orion.Domain.EntityItemGroundfos.ItemE5", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogE5Id");

                    b.Property<double>("CostMultiplier");

                    b.Property<int>("DesignIndex");

                    b.Property<string>("Electrical");

                    b.Property<double>("Freight");

                    b.Property<string>("Gpm");

                    b.Property<string>("Hp");

                    b.Property<bool>("IsExcluded");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<string>("Motor");

                    b.Property<bool>("OverridePrice");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuoteId");

                    b.Property<string>("Rpm");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Tag");

                    b.Property<string>("Tdh");

                    b.HasKey("Id");

                    b.HasIndex("CatalogE5Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("ItemE5s");
                });

            modelBuilder.Entity("Orion.Domain.EntityItemGroundfos.ItemE6", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogE6Id");

                    b.Property<double>("CostMultiplier");

                    b.Property<int>("DesignIndex");

                    b.Property<string>("Electrical");

                    b.Property<double>("Freight");

                    b.Property<string>("Gpm");

                    b.Property<string>("Hp");

                    b.Property<bool>("IsExcluded");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<string>("Motor");

                    b.Property<bool>("OverridePrice");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuoteId");

                    b.Property<string>("Rpm");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Tag");

                    b.Property<string>("Tdh");

                    b.HasKey("Id");

                    b.HasIndex("CatalogE6Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("ItemE6s");
                });

            modelBuilder.Entity("Orion.Domain.EntityItemGroundfos.ItemE7", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogE7Id");

                    b.Property<double>("CostMultiplier");

                    b.Property<int>("DesignIndex");

                    b.Property<string>("Electrical");

                    b.Property<double>("Freight");

                    b.Property<string>("Gpm");

                    b.Property<string>("Hp");

                    b.Property<bool>("IsExcluded");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<string>("Motor");

                    b.Property<bool>("OverridePrice");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuoteId");

                    b.Property<string>("Rpm");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Tag");

                    b.Property<string>("Tdh");

                    b.HasKey("Id");

                    b.HasIndex("CatalogE7Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("ItemE7s");
                });

            modelBuilder.Entity("Orion.Domain.EntityItemPuroFlux.ItemD1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogD1Id");

                    b.Property<double>("CostMultiplier");

                    b.Property<int>("DesignIndex");

                    b.Property<double>("Freight");

                    b.Property<bool>("IsExcluded");

                    b.Property<double>("ListPrice");

                    b.Property<bool>("OverridePrice");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuoteId");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Tag");

                    b.HasKey("Id");

                    b.HasIndex("CatalogD1Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("ItemD1s");
                });

            modelBuilder.Entity("Orion.Domain.EntityItemPuroFlux.ItemD2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogD2Id");

                    b.Property<double>("CostMultiplier");

                    b.Property<int>("DesignIndex");

                    b.Property<double>("Freight");

                    b.Property<bool>("IsExcluded");

                    b.Property<double>("ListPrice");

                    b.Property<bool>("OverridePrice");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuoteId");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Tag");

                    b.HasKey("Id");

                    b.HasIndex("CatalogD2Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("ItemD2s");
                });

            modelBuilder.Entity("Orion.Domain.EntityItemUvResources.ItemF1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogF1Id");

                    b.Property<double>("CostMultiplier");

                    b.Property<int>("DesignIndex");

                    b.Property<double>("Freight");

                    b.Property<bool>("IsExcluded");

                    b.Property<double>("ListPrice");

                    b.Property<bool>("OverridePrice");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuoteId");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Tag");

                    b.HasKey("Id");

                    b.HasIndex("CatalogF1Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("ItemF1s");
                });

            modelBuilder.Entity("Orion.Domain.EnviroTec.Catalog.CatalogR1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CostMultiplier");

                    b.Property<int?>("DataSheetId");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<double>("SellMargin");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.ToTable("CatalogR1s");
                });

            modelBuilder.Entity("Orion.Domain.EnviroTec.Catalog.CatalogR2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CostMultiplier");

                    b.Property<int?>("DataSheetId");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<double>("SellMargin");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.ToTable("CatalogR2s");
                });

            modelBuilder.Entity("Orion.Domain.EnviroTec.Catalog.CatalogR3", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CostMultiplier");

                    b.Property<int?>("DataSheetId");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<double>("SellMargin");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.ToTable("CatalogR3s");
                });

            modelBuilder.Entity("Orion.Domain.EnviroTec.Catalog.CatalogR4", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CostMultiplier");

                    b.Property<int?>("DataSheetId");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<double>("SellMargin");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.ToTable("CatalogR4s");
                });

            modelBuilder.Entity("Orion.Domain.EnviroTec.Item.ItemR1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogR1Id");

                    b.Property<string>("Cfm");

                    b.Property<string>("ChwCapacity");

                    b.Property<string>("ChwRowsFpi");

                    b.Property<double>("CostMultiplier");

                    b.Property<int>("DesignIndex");

                    b.Property<double>("Freight");

                    b.Property<string>("HwCapacity");

                    b.Property<string>("HwRowsFpi");

                    b.Property<bool>("IsExcluded");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<bool>("OverridePrice");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuoteId");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Tag");

                    b.Property<string>("Voltage");

                    b.HasKey("Id");

                    b.HasIndex("CatalogR1Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("ItemR1s");
                });

            modelBuilder.Entity("Orion.Domain.EnviroTec.Item.ItemR2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogR2Id");

                    b.Property<string>("Cfm");

                    b.Property<string>("ChwCapacity");

                    b.Property<string>("ChwRowsFpi");

                    b.Property<double>("CostMultiplier");

                    b.Property<int>("DesignIndex");

                    b.Property<double>("Freight");

                    b.Property<string>("HwCapacity");

                    b.Property<string>("HwRowsFpi");

                    b.Property<bool>("IsExcluded");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<bool>("OverridePrice");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuoteId");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Tag");

                    b.Property<string>("Voltage");

                    b.HasKey("Id");

                    b.HasIndex("CatalogR2Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("ItemR2s");
                });

            modelBuilder.Entity("Orion.Domain.EnviroTec.Item.ItemR3", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogR3Id");

                    b.Property<string>("Cfm");

                    b.Property<string>("ChwCapacity");

                    b.Property<string>("ChwRowsFpi");

                    b.Property<double>("CostMultiplier");

                    b.Property<int>("DesignIndex");

                    b.Property<double>("Freight");

                    b.Property<string>("HwCapacity");

                    b.Property<string>("HwRowsFpi");

                    b.Property<bool>("IsExcluded");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<bool>("OverridePrice");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuoteId");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Tag");

                    b.Property<string>("Voltage");

                    b.HasKey("Id");

                    b.HasIndex("CatalogR3Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("ItemR3s");
                });

            modelBuilder.Entity("Orion.Domain.EnviroTec.Item.ItemR4", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogR4Id");

                    b.Property<string>("Cfm");

                    b.Property<string>("ChwCapacity");

                    b.Property<string>("ChwRowsFpi");

                    b.Property<double>("CostMultiplier");

                    b.Property<int>("DesignIndex");

                    b.Property<double>("Freight");

                    b.Property<string>("HwCapacity");

                    b.Property<string>("HwRowsFpi");

                    b.Property<bool>("IsExcluded");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<bool>("OverridePrice");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuoteId");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Tag");

                    b.Property<string>("Voltage");

                    b.HasKey("Id");

                    b.HasIndex("CatalogR4Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("ItemR4s");
                });

            modelBuilder.Entity("Orion.Domain.LYNC.Catalog.CatalogS1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CostMultiplier");

                    b.Property<int?>("DataSheetId");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<double>("SellMargin");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.ToTable("CatalogS1s");
                });

            modelBuilder.Entity("Orion.Domain.LYNC.Item.ItemS1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogS1Id");

                    b.Property<string>("CoolingCapacity");

                    b.Property<double>("CostMultiplier");

                    b.Property<int>("DesignIndex");

                    b.Property<double>("Freight");

                    b.Property<string>("HeatingCapacity");

                    b.Property<bool>("IsExcluded");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<bool>("OverridePrice");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuoteId");

                    b.Property<string>("Refrigerant");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Tag");

                    b.Property<string>("Voltage");

                    b.HasKey("Id");

                    b.HasIndex("CatalogS1Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("ItemS1s");
                });

            modelBuilder.Entity("Orion.Domain.Marvair.Catalog.CatalogI2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CostMultiplier");

                    b.Property<int?>("DataSheetId");

                    b.Property<string>("Description");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<double>("SellMargin");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.ToTable("CatalogI2s");
                });

            modelBuilder.Entity("Orion.Domain.Marvair.CatalogI1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CostMultiplier");

                    b.Property<int?>("DataSheetId");

                    b.Property<string>("Description");

                    b.Property<bool>("Economizer");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<double>("SellMargin");

                    b.Property<string>("UnitSize");

                    b.Property<string>("Voltage");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.ToTable("CatalogI1s");
                });

            modelBuilder.Entity("Orion.Domain.Marvair.Item.ItemI1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogI1Id");

                    b.Property<double>("CostMultiplier");

                    b.Property<int>("DesignIndex");

                    b.Property<double>("Freight");

                    b.Property<bool>("IsExcluded");

                    b.Property<double>("ListPrice");

                    b.Property<bool>("OverridePrice");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuoteId");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Tag");

                    b.HasKey("Id");

                    b.HasIndex("CatalogI1Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("ItemI1s");
                });

            modelBuilder.Entity("Orion.Domain.Marvair.Item.ItemI2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogI2Id");

                    b.Property<double>("CostMultiplier");

                    b.Property<int>("DesignIndex");

                    b.Property<double>("Freight");

                    b.Property<bool>("IsExcluded");

                    b.Property<double>("ListPrice");

                    b.Property<bool>("OverridePrice");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuoteId");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Tag");

                    b.HasKey("Id");

                    b.HasIndex("CatalogI2Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("ItemI2s");
                });

            modelBuilder.Entity("Orion.Domain.Multiaqua.Catalog.CatalogK1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CostMultiplier");

                    b.Property<int?>("DataSheetId");

                    b.Property<string>("Description");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<double>("SellMargin");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.ToTable("CatalogK1s");
                });

            modelBuilder.Entity("Orion.Domain.Multiaqua.Catalog.CatalogK2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CostMultiplier");

                    b.Property<int?>("DataSheetId");

                    b.Property<string>("Description");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<double>("SellMargin");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.ToTable("CatalogK2s");
                });

            modelBuilder.Entity("Orion.Domain.Multiaqua.Catalog.CatalogK3", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CostMultiplier");

                    b.Property<int?>("DataSheetId");

                    b.Property<string>("Description");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<double>("SellMargin");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.ToTable("CatalogK3s");
                });

            modelBuilder.Entity("Orion.Domain.Multiaqua.Item.ItemK1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogK1Id");

                    b.Property<double>("CostMultiplier");

                    b.Property<int>("DesignIndex");

                    b.Property<double>("Freight");

                    b.Property<bool>("IsExcluded");

                    b.Property<double>("ListPrice");

                    b.Property<bool>("OverridePrice");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuoteId");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Tag");

                    b.HasKey("Id");

                    b.HasIndex("CatalogK1Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("ItemK1s");
                });

            modelBuilder.Entity("Orion.Domain.Multiaqua.Item.ItemK2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogK2Id");

                    b.Property<double>("CostMultiplier");

                    b.Property<int>("DesignIndex");

                    b.Property<double>("Freight");

                    b.Property<bool>("IsExcluded");

                    b.Property<double>("ListPrice");

                    b.Property<bool>("OverridePrice");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuoteId");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Tag");

                    b.HasKey("Id");

                    b.HasIndex("CatalogK2Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("ItemK2s");
                });

            modelBuilder.Entity("Orion.Domain.Multiaqua.Item.ItemK3", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogK3Id");

                    b.Property<double>("CostMultiplier");

                    b.Property<int>("DesignIndex");

                    b.Property<double>("Freight");

                    b.Property<bool>("IsExcluded");

                    b.Property<double>("ListPrice");

                    b.Property<bool>("OverridePrice");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuoteId");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Tag");

                    b.HasKey("Id");

                    b.HasIndex("CatalogK3Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("ItemK3s");
                });

            modelBuilder.Entity("Orion.Domain.Nortek.Catalog.CatalogT1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CostMultiplier");

                    b.Property<int?>("DataSheetId");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<double>("SellMargin");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.ToTable("CatalogT1s");
                });

            modelBuilder.Entity("Orion.Domain.Nortek.Catalog.CatalogT2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CostMultiplier");

                    b.Property<int?>("DataSheetId");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<double>("SellMargin");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.ToTable("CatalogT2s");
                });

            modelBuilder.Entity("Orion.Domain.Nortek.Catalog.CatalogT3", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CostMultiplier");

                    b.Property<int?>("DataSheetId");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<double>("SellMargin");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.ToTable("CatalogT3s");
                });

            modelBuilder.Entity("Orion.Domain.Nortek.Item.ItemT1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogT1Id");

                    b.Property<string>("Cfm");

                    b.Property<double>("CostMultiplier");

                    b.Property<int>("DesignIndex");

                    b.Property<string>("Fpi");

                    b.Property<double>("Freight");

                    b.Property<bool>("IsExcluded");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<bool>("OverridePrice");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuoteId");

                    b.Property<string>("Rows");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Size");

                    b.Property<string>("Tag");

                    b.HasKey("Id");

                    b.HasIndex("CatalogT1Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("ItemT1s");
                });

            modelBuilder.Entity("Orion.Domain.Nortek.Item.ItemT2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogT2Id");

                    b.Property<string>("Cfm");

                    b.Property<double>("CostMultiplier");

                    b.Property<int>("DesignIndex");

                    b.Property<double>("Freight");

                    b.Property<bool>("IsExcluded");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<bool>("OverridePrice");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuoteId");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Tag");

                    b.Property<string>("Voltage");

                    b.HasKey("Id");

                    b.HasIndex("CatalogT2Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("ItemT2s");
                });

            modelBuilder.Entity("Orion.Domain.Nortek.Item.ItemT3", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActiveFans");

                    b.Property<string>("Array");

                    b.Property<string>("Bhp");

                    b.Property<int?>("CatalogT3Id");

                    b.Property<string>("Cell");

                    b.Property<string>("Cfm");

                    b.Property<double>("CostMultiplier");

                    b.Property<int>("DesignIndex");

                    b.Property<string>("FanArrays");

                    b.Property<double>("Freight");

                    b.Property<bool>("IsExcluded");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<bool>("OverridePrice");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuoteId");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Tag");

                    b.Property<string>("TotalHp");

                    b.Property<string>("Tsp");

                    b.Property<string>("VfdHp");

                    b.HasKey("Id");

                    b.HasIndex("CatalogT3Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("ItemT3s");
                });

            modelBuilder.Entity("Orion.Domain.NYLE.Catalog.CatalogU1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CostMultiplier");

                    b.Property<int?>("DataSheetId");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<double>("SellMargin");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.ToTable("CatalogU1s");
                });

            modelBuilder.Entity("Orion.Domain.NYLE.Item.ItemU1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogU1Id");

                    b.Property<string>("Compressor");

                    b.Property<string>("CoolingCapacity");

                    b.Property<double>("CostMultiplier");

                    b.Property<int>("DesignIndex");

                    b.Property<double>("Freight");

                    b.Property<string>("HeatingCapacity");

                    b.Property<bool>("IsExcluded");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<bool>("OverridePrice");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuoteId");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Tag");

                    b.Property<string>("Voltage");

                    b.HasKey("Id");

                    b.HasIndex("CatalogU1Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("ItemU1s");
                });

            modelBuilder.Entity("Orion.Domain.PACE.Catalog.CatalogJ1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CostMultiplier");

                    b.Property<int?>("DataSheetId");

                    b.Property<string>("Description");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<double>("SellMargin");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.ToTable("CatalogJ1s");
                });

            modelBuilder.Entity("Orion.Domain.PACE.Item.ItemJ1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogJ1Id");

                    b.Property<string>("Cfm");

                    b.Property<double>("CostMultiplier");

                    b.Property<int>("DesignIndex");

                    b.Property<double>("Freight");

                    b.Property<bool>("IsExcluded");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<bool>("OverridePrice");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuoteId");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Tag");

                    b.Property<string>("Voltage");

                    b.Property<string>("Weight");

                    b.HasKey("Id");

                    b.HasIndex("CatalogJ1Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("ItemJ1s");
                });

            modelBuilder.Entity("Orion.Domain.PlasmaAir.Catalog.CatalogV1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CostMultiplier");

                    b.Property<int?>("DataSheetId");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<double>("SellMargin");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.ToTable("CatalogV1s");
                });

            modelBuilder.Entity("Orion.Domain.PlasmaAir.Item.ItemV1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AirFlowCapacity");

                    b.Property<int?>("CatalogV1Id");

                    b.Property<double>("CostMultiplier");

                    b.Property<int>("DesignIndex");

                    b.Property<double>("Freight");

                    b.Property<bool>("IsExcluded");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<string>("NoIonizationModules");

                    b.Property<bool>("OverridePrice");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuoteId");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Tag");

                    b.Property<string>("Voltage");

                    b.HasKey("Id");

                    b.HasIndex("CatalogV1Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("ItemV1s");
                });

            modelBuilder.Entity("Orion.Domain.Polaris.Catalog.CatalogW1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CostMultiplier");

                    b.Property<int?>("DataSheetId");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<double>("SellMargin");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.ToTable("CatalogW1s");
                });

            modelBuilder.Entity("Orion.Domain.Polaris.Item.ItemW1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogW1Id");

                    b.Property<string>("Cfm");

                    b.Property<string>("ColdSideEwt");

                    b.Property<string>("ColdSideGpm");

                    b.Property<double>("CostMultiplier");

                    b.Property<int>("DesignIndex");

                    b.Property<double>("Freight");

                    b.Property<string>("HotSideEwt");

                    b.Property<string>("HotSideGpm");

                    b.Property<bool>("IsExcluded");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<bool>("OverridePrice");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuoteId");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Tag");

                    b.HasKey("Id");

                    b.HasIndex("CatalogW1Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("ItemW1s");
                });

            modelBuilder.Entity("Orion.Domain.PVI.Catalog.CatalogX1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CostMultiplier");

                    b.Property<int?>("DataSheetId");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<double>("SellMargin");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.ToTable("CatalogX1s");
                });

            modelBuilder.Entity("Orion.Domain.PVI.Catalog.CatalogX2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CostMultiplier");

                    b.Property<int?>("DataSheetId");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<double>("SellMargin");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.ToTable("CatalogX2s");
                });

            modelBuilder.Entity("Orion.Domain.PVI.Catalog.CatalogX3", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CostMultiplier");

                    b.Property<int?>("DataSheetId");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<double>("SellMargin");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.ToTable("CatalogX3s");
                });

            modelBuilder.Entity("Orion.Domain.PVI.Catalog.CatalogX4", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CostMultiplier");

                    b.Property<int?>("DataSheetId");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<double>("SellMargin");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.ToTable("CatalogX4s");
                });

            modelBuilder.Entity("Orion.Domain.PVI.Catalog.CatalogX5", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CostMultiplier");

                    b.Property<int?>("DataSheetId");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<double>("SellMargin");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.ToTable("CatalogX5s");
                });

            modelBuilder.Entity("Orion.Domain.PVI.Item.ItemX1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogX1Id");

                    b.Property<double>("CostMultiplier");

                    b.Property<int>("DesignIndex");

                    b.Property<double>("Freight");

                    b.Property<bool>("IsExcluded");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<bool>("OverridePrice");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuoteId");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Tag");

                    b.Property<string>("Weight");

                    b.HasKey("Id");

                    b.HasIndex("CatalogX1Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("ItemX1s");
                });

            modelBuilder.Entity("Orion.Domain.PVI.Item.ItemX2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Capacity");

                    b.Property<int?>("CatalogX2Id");

                    b.Property<double>("CostMultiplier");

                    b.Property<int>("DesignIndex");

                    b.Property<double>("Freight");

                    b.Property<bool>("IsExcluded");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<bool>("OverridePrice");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuoteId");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Tag");

                    b.HasKey("Id");

                    b.HasIndex("CatalogX2Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("ItemX2s");
                });

            modelBuilder.Entity("Orion.Domain.PVI.Item.ItemX3", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogX3Id");

                    b.Property<string>("Connection");

                    b.Property<double>("CostMultiplier");

                    b.Property<int>("DesignIndex");

                    b.Property<double>("Freight");

                    b.Property<bool>("IsExcluded");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Location");

                    b.Property<string>("Model");

                    b.Property<bool>("OverridePrice");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuoteId");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Tag");

                    b.Property<string>("Tank");

                    b.HasKey("Id");

                    b.HasIndex("CatalogX3Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("ItemX3s");
                });

            modelBuilder.Entity("Orion.Domain.PVI.Item.ItemX4", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogX4Id");

                    b.Property<double>("CostMultiplier");

                    b.Property<int>("DesignIndex");

                    b.Property<double>("Freight");

                    b.Property<bool>("IsExcluded");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<bool>("OverridePrice");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuoteId");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Tag");

                    b.Property<string>("Weight");

                    b.HasKey("Id");

                    b.HasIndex("CatalogX4Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("ItemX4s");
                });

            modelBuilder.Entity("Orion.Domain.PVI.Item.ItemX5", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogX5Id");

                    b.Property<double>("CostMultiplier");

                    b.Property<int>("DesignIndex");

                    b.Property<double>("Freight");

                    b.Property<bool>("IsExcluded");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<bool>("OverridePrice");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuoteId");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Tag");

                    b.Property<string>("Weight");

                    b.HasKey("Id");

                    b.HasIndex("CatalogX5Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("ItemX5s");
                });

            modelBuilder.Entity("Orion.Domain.Robur.Catalog.CatalogY1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CostMultiplier");

                    b.Property<int?>("DataSheetId");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<double>("SellMargin");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.ToTable("CatalogY1s");
                });

            modelBuilder.Entity("Orion.Domain.Robur.Item.ItemY1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogY1Id");

                    b.Property<string>("CoolingNominalTons");

                    b.Property<double>("CostMultiplier");

                    b.Property<int>("DesignIndex");

                    b.Property<double>("Freight");

                    b.Property<string>("Fuel");

                    b.Property<string>("HeatingMbhOutput");

                    b.Property<bool>("IsExcluded");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<bool>("OverridePrice");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuoteId");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Tag");

                    b.Property<string>("Voltage");

                    b.HasKey("Id");

                    b.HasIndex("CatalogY1Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("ItemY1s");
                });

            modelBuilder.Entity("Orion.Domain.UMAS.Catalog.CatalogM1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CostMultiplier");

                    b.Property<int?>("DataSheetId");

                    b.Property<string>("Description");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<double>("SellMargin");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.ToTable("CatalogM1s");
                });

            modelBuilder.Entity("Orion.Domain.UMAS.Item.ItemM1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogM1Id");

                    b.Property<string>("Cfm");

                    b.Property<double>("CostMultiplier");

                    b.Property<int>("DesignIndex");

                    b.Property<double>("Freight");

                    b.Property<bool>("IsExcluded");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<bool>("OverridePrice");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuoteId");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Tag");

                    b.Property<string>("Voltage");

                    b.Property<string>("Weight");

                    b.HasKey("Id");

                    b.HasIndex("CatalogM1Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("ItemM1s");
                });

            modelBuilder.Entity("Orion.Domain.UvResources.Related.CatalogF1ProductType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("CatalogF1ProductTypes");
                });

            modelBuilder.Entity("Orion.Domain.Valent.Catalog.CatalogZ1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CostMultiplier");

                    b.Property<int?>("DataSheetId");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<double>("SellMargin");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.ToTable("CatalogZ1s");
                });

            modelBuilder.Entity("Orion.Domain.Valent.Item.ItemZ1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogZ1Id");

                    b.Property<string>("Cfm");

                    b.Property<double>("CostMultiplier");

                    b.Property<int>("DesignIndex");

                    b.Property<double>("Freight");

                    b.Property<bool>("IsExcluded");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<bool>("OverridePrice");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuoteId");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Tag");

                    b.Property<string>("Voltage");

                    b.HasKey("Id");

                    b.HasIndex("CatalogZ1Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("ItemZ1s");
                });

            modelBuilder.Entity("Orion.Domain.Whalen.Catalog.CatalogAA1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CostMultiplier");

                    b.Property<int?>("DataSheetId");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<double>("SellMargin");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.ToTable("CatalogAA1s");
                });

            modelBuilder.Entity("Orion.Domain.Whalen.Item.ItemAA1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogAA1Id");

                    b.Property<double>("CostMultiplier");

                    b.Property<int>("DesignIndex");

                    b.Property<double>("Freight");

                    b.Property<bool>("IsExcluded");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<bool>("OverridePrice");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuoteId");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Tag");

                    b.Property<string>("Voltage");

                    b.HasKey("Id");

                    b.HasIndex("CatalogAA1Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("ItemAA1s");
                });

            modelBuilder.Entity("Orion.Domain.ABOVEAIR.Catalog.CatalogN1", b =>
                {
                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("Orion.Domain.ABOVEAIR.Item.ItemN1", b =>
                {
                    b.HasOne("Orion.Domain.ABOVEAIR.Catalog.CatalogN1", "CatalogN1")
                        .WithMany()
                        .HasForeignKey("CatalogN1Id");

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("ItemN1s")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.AERCO.Catalog.CatalogO1", b =>
                {
                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("Orion.Domain.AERCO.Catalog.CatalogO2", b =>
                {
                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("Orion.Domain.AERCO.Item.ItemO1", b =>
                {
                    b.HasOne("Orion.Domain.AERCO.Catalog.CatalogO1", "CatalogO1")
                        .WithMany()
                        .HasForeignKey("CatalogO1Id");

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("ItemO1s")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.AERCO.Item.ItemO2", b =>
                {
                    b.HasOne("Orion.Domain.AERCO.Catalog.CatalogO2", "CatalogO2")
                        .WithMany()
                        .HasForeignKey("CatalogO2Id");

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("ItemO2s")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.Baldor.Catalog.CatalogP1", b =>
                {
                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("Orion.Domain.Baldor.Item.ItemP1", b =>
                {
                    b.HasOne("Orion.Domain.Baldor.Catalog.CatalogP1", "CatalogP1")
                        .WithMany()
                        .HasForeignKey("CatalogP1Id");

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("ItemP1s")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.Condair.Catalog.CatalogQ1", b =>
                {
                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("Orion.Domain.Condair.Catalog.CatalogQ2", b =>
                {
                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("Orion.Domain.Condair.Catalog.CatalogQ3", b =>
                {
                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("Orion.Domain.Condair.Catalog.CatalogQ4", b =>
                {
                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("Orion.Domain.Condair.Item.ItemQ1", b =>
                {
                    b.HasOne("Orion.Domain.Condair.Catalog.CatalogQ1", "CatalogQ1")
                        .WithMany()
                        .HasForeignKey("CatalogQ1Id");

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("ItemQ1s")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.Condair.Item.ItemQ2", b =>
                {
                    b.HasOne("Orion.Domain.Condair.Catalog.CatalogQ2", "CatalogQ2")
                        .WithMany()
                        .HasForeignKey("CatalogQ2Id");

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("ItemQ2s")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.Condair.Item.ItemQ3", b =>
                {
                    b.HasOne("Orion.Domain.Condair.Catalog.CatalogQ3", "CatalogQ3")
                        .WithMany()
                        .HasForeignKey("CatalogQ3Id");

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("ItemQ3s")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.Condair.Item.ItemQ4", b =>
                {
                    b.HasOne("Orion.Domain.Condair.Catalog.CatalogQ4", "CatalogQ4")
                        .WithMany()
                        .HasForeignKey("CatalogQ4Id");

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("ItemQ4s")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.Entity.DataSheet", b =>
                {
                    b.HasOne("Orion.Domain.Entity.Product", "Product")
                        .WithMany("DataSheets")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.Entity.Permission", b =>
                {
                    b.HasOne("Orion.Domain.Entity.User", "User")
                        .WithOne("Permission")
                        .HasForeignKey("Orion.Domain.Entity.Permission", "UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.Entity.Product", b =>
                {
                    b.HasOne("Orion.Domain.Entity.Company", "Company")
                        .WithMany("Products")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.Entity.Project", b =>
                {
                    b.HasOne("Orion.Domain.Entity.User", "User")
                        .WithMany("Projects")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.Entity.Quote", b =>
                {
                    b.HasOne("Orion.Domain.Entity.Project", "Project")
                        .WithMany("Quotes")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.Entity.QuoteCompanies", b =>
                {
                    b.HasOne("Orion.Domain.Entity.Company", "Company")
                        .WithMany("QuoteCompanies")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("QuoteCompanies")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.Entity.Spec", b =>
                {
                    b.HasOne("Orion.Domain.Entity.Title", "Title")
                        .WithMany("Specs")
                        .HasForeignKey("TitleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.Entity.Title", b =>
                {
                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany("Titles")
                        .HasForeignKey("DataSheetId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.EntityItem.ItemA1", "ItemA1")
                        .WithMany("Titles")
                        .HasForeignKey("ItemA1Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.EntityItem.ItemA2", "ItemA2")
                        .WithMany("Titles")
                        .HasForeignKey("ItemA2Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.EntityItem.ItemA3", "ItemA3")
                        .WithMany("Titles")
                        .HasForeignKey("ItemA3Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.EntityItem.ItemA4", "ItemA4")
                        .WithMany("Titles")
                        .HasForeignKey("ItemA4Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.Whalen.Item.ItemAA1", "ItemAA1")
                        .WithMany("Titles")
                        .HasForeignKey("ItemAA1Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.EntityItemABB.ItemB1", "ItemB1")
                        .WithMany("Titles")
                        .HasForeignKey("ItemB1Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.EntityItemABB.ItemB2", "ItemB2")
                        .WithMany("Titles")
                        .HasForeignKey("ItemB2Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.EntityItemABB.ItemB3", "ItemB3")
                        .WithMany("Titles")
                        .HasForeignKey("ItemB3Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.EntityItemABB.ItemB4", "ItemB4")
                        .WithMany("Titles")
                        .HasForeignKey("ItemB4Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.EntityItemABB.ItemB5", "ItemB5")
                        .WithMany("Titles")
                        .HasForeignKey("ItemB5Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.EntityItemAmericanWheatley.ItemC1", "ItemC1")
                        .WithMany("Titles")
                        .HasForeignKey("ItemC1Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.EntityItemAmericanWheatley.ItemC2", "ItemC2")
                        .WithMany("Titles")
                        .HasForeignKey("ItemC2Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.EntityItemAmericanWheatley.ItemC3", "ItemC3")
                        .WithMany("Titles")
                        .HasForeignKey("ItemC3Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.EntityItemAmericanWheatley.ItemC4", "ItemC4")
                        .WithMany("Titles")
                        .HasForeignKey("ItemC4Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.EntityItemAmericanWheatley.ItemC5", "ItemC5")
                        .WithMany("Titles")
                        .HasForeignKey("ItemC5Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.EntityItemAmericanWheatley.ItemC6", "ItemC6")
                        .WithMany("Titles")
                        .HasForeignKey("ItemC6Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.EntityItemAmericanWheatley.ItemC7", "ItemC7")
                        .WithMany("Titles")
                        .HasForeignKey("ItemC7Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.EntityItemPuroFlux.ItemD1", "ItemD1")
                        .WithMany("Titles")
                        .HasForeignKey("ItemD1Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.EntityItemPuroFlux.ItemD2", "ItemD2")
                        .WithMany("Titles")
                        .HasForeignKey("ItemD2Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.EntityItemGroundfos.ItemE1", "ItemE1")
                        .WithMany("Titles")
                        .HasForeignKey("ItemE1Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.EntityItemGroundfos.ItemE2", "ItemE2")
                        .WithMany("Titles")
                        .HasForeignKey("ItemE2Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.EntityItemGroundfos.ItemE3", "ItemE3")
                        .WithMany("Titles")
                        .HasForeignKey("ItemE3Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.EntityItemGroundfos.ItemE4", "ItemE4")
                        .WithMany("Titles")
                        .HasForeignKey("ItemE4Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.EntityItemGroundfos.ItemE5", "ItemE5")
                        .WithMany("Titles")
                        .HasForeignKey("ItemE5Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.EntityItemGroundfos.ItemE6", "ItemE6")
                        .WithMany("Titles")
                        .HasForeignKey("ItemE6Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.EntityItemGroundfos.ItemE7", "ItemE7")
                        .WithMany("Titles")
                        .HasForeignKey("ItemE7Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.EntityItemUvResources.ItemF1", "ItemF1")
                        .WithMany("Titles")
                        .HasForeignKey("ItemF1Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.EntityItemBACOpenLoopTowers.ItemG1", "ItemG1")
                        .WithMany("Titles")
                        .HasForeignKey("ItemG1Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.EntityItemBACOpenLoopTowers.ItemG2", "ItemG2")
                        .WithMany("Titles")
                        .HasForeignKey("ItemG2Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.EntityItemBACOpenLoopTowers.ItemG3", "ItemG3")
                        .WithMany("Titles")
                        .HasForeignKey("ItemG3Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.EntityItemBACOpenLoopTowers.ItemG4", "ItemG4")
                        .WithMany("Titles")
                        .HasForeignKey("ItemG4Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.EntityItemBACOpenLoopTowers.ItemG5", "ItemG5")
                        .WithMany("Titles")
                        .HasForeignKey("ItemG5Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.EntityItemBACOpenLoopTowers.ItemG6", "ItemG6")
                        .WithMany("Titles")
                        .HasForeignKey("ItemG6Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.EntityItemBACClosedLoopTowers.ItemH1", "ItemH1")
                        .WithMany("Titles")
                        .HasForeignKey("ItemH1Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.EntityItemBACClosedLoopTowers.ItemH2", "ItemH2")
                        .WithMany("Titles")
                        .HasForeignKey("ItemH2Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.EntityItemBACClosedLoopTowers.ItemH3", "ItemH3")
                        .WithMany("Titles")
                        .HasForeignKey("ItemH3Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.EntityItemBACClosedLoopTowers.ItemH4", "ItemH4")
                        .WithMany("Titles")
                        .HasForeignKey("ItemH4Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.EntityItemBACClosedLoopTowers.ItemH5", "ItemH5")
                        .WithMany("Titles")
                        .HasForeignKey("ItemH5Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.Marvair.Item.ItemI1", "ItemI1")
                        .WithMany("Titles")
                        .HasForeignKey("ItemI1Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.Marvair.Item.ItemI2", "ItemI2")
                        .WithMany("Titles")
                        .HasForeignKey("ItemI2Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.PACE.Item.ItemJ1", "ItemJ1")
                        .WithMany("Titles")
                        .HasForeignKey("ItemJ1Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.Multiaqua.Item.ItemK1", "ItemK1")
                        .WithMany("Titles")
                        .HasForeignKey("ItemK1Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.Multiaqua.Item.ItemK2", "ItemK2")
                        .WithMany("Titles")
                        .HasForeignKey("ItemK2Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.Multiaqua.Item.ItemK3", "ItemK3")
                        .WithMany("Titles")
                        .HasForeignKey("ItemK3Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.EntityItemGeneralProduct.ItemL1", "ItemL1")
                        .WithMany("Titles")
                        .HasForeignKey("ItemL1Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.UMAS.Item.ItemM1", "ItemM1")
                        .WithMany("Titles")
                        .HasForeignKey("ItemM1Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.ABOVEAIR.Item.ItemN1", "ItemN1")
                        .WithMany("Titles")
                        .HasForeignKey("ItemN1Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.AERCO.Item.ItemO1", "ItemO1")
                        .WithMany("Titles")
                        .HasForeignKey("ItemO1Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.AERCO.Item.ItemO2", "ItemO2")
                        .WithMany("Titles")
                        .HasForeignKey("ItemO2Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.Baldor.Item.ItemP1", "ItemP1")
                        .WithMany("Titles")
                        .HasForeignKey("ItemP1Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.Condair.Item.ItemQ1", "ItemQ1")
                        .WithMany("Titles")
                        .HasForeignKey("ItemQ1Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.Condair.Item.ItemQ2", "ItemQ2")
                        .WithMany("Titles")
                        .HasForeignKey("ItemQ2Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.Condair.Item.ItemQ3", "ItemQ3")
                        .WithMany("Titles")
                        .HasForeignKey("ItemQ3Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.Condair.Item.ItemQ4", "ItemQ4")
                        .WithMany("Titles")
                        .HasForeignKey("ItemQ4Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.EnviroTec.Item.ItemR1", "ItemR1")
                        .WithMany("Titles")
                        .HasForeignKey("ItemR1Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.EnviroTec.Item.ItemR2", "ItemR2")
                        .WithMany("Titles")
                        .HasForeignKey("ItemR2Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.EnviroTec.Item.ItemR3", "ItemR3")
                        .WithMany("Titles")
                        .HasForeignKey("ItemR3Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.EnviroTec.Item.ItemR4", "ItemR4")
                        .WithMany("Titles")
                        .HasForeignKey("ItemR4Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.LYNC.Item.ItemS1", "ItemS1")
                        .WithMany("Titles")
                        .HasForeignKey("ItemS1Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.Nortek.Item.ItemT1", "ItemT1")
                        .WithMany("Titles")
                        .HasForeignKey("ItemT1Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.Nortek.Item.ItemT2", "ItemT2")
                        .WithMany("Titles")
                        .HasForeignKey("ItemT2Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.Nortek.Item.ItemT3", "ItemT3")
                        .WithMany("Titles")
                        .HasForeignKey("ItemT3Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.NYLE.Item.ItemU1", "ItemU1")
                        .WithMany("Titles")
                        .HasForeignKey("ItemU1Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.PlasmaAir.Item.ItemV1", "ItemV1")
                        .WithMany("Titles")
                        .HasForeignKey("ItemV1Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.Polaris.Item.ItemW1", "ItemW1")
                        .WithMany("Titles")
                        .HasForeignKey("ItemW1Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.PVI.Item.ItemX1", "ItemX1")
                        .WithMany("Titles")
                        .HasForeignKey("ItemX1Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.PVI.Item.ItemX2", "ItemX2")
                        .WithMany("Titles")
                        .HasForeignKey("ItemX2Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.PVI.Item.ItemX3", "ItemX3")
                        .WithMany("Titles")
                        .HasForeignKey("ItemX3Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.PVI.Item.ItemX4", "ItemX4")
                        .WithMany("Titles")
                        .HasForeignKey("ItemX4Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.PVI.Item.ItemX5", "ItemX5")
                        .WithMany("Titles")
                        .HasForeignKey("ItemX5Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.Robur.Item.ItemY1", "ItemY1")
                        .WithMany("Titles")
                        .HasForeignKey("ItemY1Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.Valent.Item.ItemZ1", "ItemZ1")
                        .WithMany("Titles")
                        .HasForeignKey("ItemZ1Id")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogABB.CatalogB1", b =>
                {
                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogABB.CatalogB2", b =>
                {
                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogABB.CatalogB3", b =>
                {
                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogABB.CatalogB4", b =>
                {
                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogABB.CatalogB5", b =>
                {
                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogAmericanWheatley.CatalogC1", b =>
                {
                    b.HasOne("Orion.Domain.AmericanWheatley.Related.CatalogC1ProductType", "CatalogC1ProductType")
                        .WithMany()
                        .HasForeignKey("CatalogC1ProductTypeId");

                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogAmericanWheatley.CatalogC2", b =>
                {
                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogAmericanWheatley.CatalogC3", b =>
                {
                    b.HasOne("Orion.Domain.AmericanWheatley.Related.CatalogC3ProductType", "CatalogC3ProductType")
                        .WithMany()
                        .HasForeignKey("CatalogC3ProductTypeId");

                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogAmericanWheatley.CatalogC4", b =>
                {
                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogAmericanWheatley.CatalogC5", b =>
                {
                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogAmericanWheatley.CatalogC6", b =>
                {
                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogAmericanWheatley.CatalogC7", b =>
                {
                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogBACClosedLoopTowers.CatalogH1", b =>
                {
                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogBACClosedLoopTowers.CatalogH2", b =>
                {
                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogBACClosedLoopTowers.CatalogH3", b =>
                {
                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogBACClosedLoopTowers.CatalogH4", b =>
                {
                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogBACClosedLoopTowers.CatalogH5", b =>
                {
                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogBACOpenLoopTowers.CatalogG1", b =>
                {
                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogBACOpenLoopTowers.CatalogG2", b =>
                {
                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogBACOpenLoopTowers.CatalogG3", b =>
                {
                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogBACOpenLoopTowers.CatalogG4", b =>
                {
                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogBACOpenLoopTowers.CatalogG5", b =>
                {
                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogBACOpenLoopTowers.CatalogG6", b =>
                {
                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogGeneralProduct.CatalogL1", b =>
                {
                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogGroundfos.CatalogE1", b =>
                {
                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogGroundfos.CatalogE2", b =>
                {
                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogGroundfos.CatalogE3", b =>
                {
                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogGroundfos.CatalogE4", b =>
                {
                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogGroundfos.CatalogE5", b =>
                {
                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogGroundfos.CatalogE6", b =>
                {
                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogGroundfos.CatalogE7", b =>
                {
                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogPuroflux.CatalogD1", b =>
                {
                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogPuroflux.CatalogD2", b =>
                {
                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogQuantech.CatalogA1", b =>
                {
                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogQuantech.CatalogA2", b =>
                {
                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogQuantech.CatalogA3", b =>
                {
                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogQuantech.CatalogA4", b =>
                {
                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogUvResources.CatalogF1", b =>
                {
                    b.HasOne("Orion.Domain.UvResources.Related.CatalogF1ProductType", "CatalogF1ProductType")
                        .WithMany()
                        .HasForeignKey("CatalogF1ProductTypeId");

                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("Orion.Domain.EntityItem.ItemA1", b =>
                {
                    b.HasOne("Orion.Domain.EntityCatalogQuantech.CatalogA1", "CatalogA1")
                        .WithMany()
                        .HasForeignKey("CatalogA1Id");

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("ItemA1s")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.EntityItem.ItemA2", b =>
                {
                    b.HasOne("Orion.Domain.EntityCatalogQuantech.CatalogA2", "CatalogA2")
                        .WithMany()
                        .HasForeignKey("CatalogA2Id");

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("ItemA2s")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.EntityItem.ItemA3", b =>
                {
                    b.HasOne("Orion.Domain.EntityCatalogQuantech.CatalogA3", "CatalogA3")
                        .WithMany()
                        .HasForeignKey("CatalogA3Id");

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("ItemA3s")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.EntityItem.ItemA4", b =>
                {
                    b.HasOne("Orion.Domain.EntityCatalogQuantech.CatalogA4", "CatalogA4")
                        .WithMany()
                        .HasForeignKey("CatalogA4Id");

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("ItemA4s")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.EntityItemABB.ItemB1", b =>
                {
                    b.HasOne("Orion.Domain.EntityCatalogABB.CatalogB1", "CatalogB1")
                        .WithMany()
                        .HasForeignKey("CatalogB1Id");

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("ItemB1s")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.EntityItemABB.ItemB2", b =>
                {
                    b.HasOne("Orion.Domain.EntityCatalogABB.CatalogB2", "CatalogB2")
                        .WithMany()
                        .HasForeignKey("CatalogB2Id");

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("ItemB2s")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.EntityItemABB.ItemB3", b =>
                {
                    b.HasOne("Orion.Domain.EntityCatalogABB.CatalogB3", "CatalogB3")
                        .WithMany()
                        .HasForeignKey("CatalogB3Id");

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("ItemB3s")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.EntityItemABB.ItemB4", b =>
                {
                    b.HasOne("Orion.Domain.EntityCatalogABB.CatalogB4", "CatalogB4")
                        .WithMany()
                        .HasForeignKey("CatalogB4Id");

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("ItemB4s")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.EntityItemABB.ItemB5", b =>
                {
                    b.HasOne("Orion.Domain.EntityCatalogABB.CatalogB5", "CatalogB5")
                        .WithMany()
                        .HasForeignKey("CatalogB5Id");

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("ItemB5s")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.EntityItemAmericanWheatley.ItemC1", b =>
                {
                    b.HasOne("Orion.Domain.EntityCatalogAmericanWheatley.CatalogC1", "CatalogC1")
                        .WithMany()
                        .HasForeignKey("CatalogC1Id");

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("ItemC1s")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.EntityItemAmericanWheatley.ItemC2", b =>
                {
                    b.HasOne("Orion.Domain.EntityCatalogAmericanWheatley.CatalogC2", "CatalogC2")
                        .WithMany()
                        .HasForeignKey("CatalogC2Id");

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("ItemC2s")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.EntityItemAmericanWheatley.ItemC3", b =>
                {
                    b.HasOne("Orion.Domain.EntityCatalogAmericanWheatley.CatalogC3", "CatalogC3")
                        .WithMany()
                        .HasForeignKey("CatalogC3Id");

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("ItemC3s")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.EntityItemAmericanWheatley.ItemC4", b =>
                {
                    b.HasOne("Orion.Domain.EntityCatalogAmericanWheatley.CatalogC4", "CatalogC4")
                        .WithMany()
                        .HasForeignKey("CatalogC4Id");

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("ItemC4s")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.EntityItemAmericanWheatley.ItemC5", b =>
                {
                    b.HasOne("Orion.Domain.EntityCatalogAmericanWheatley.CatalogC5", "CatalogC5")
                        .WithMany()
                        .HasForeignKey("CatalogC5Id");

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("ItemC5s")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.EntityItemAmericanWheatley.ItemC6", b =>
                {
                    b.HasOne("Orion.Domain.EntityCatalogAmericanWheatley.CatalogC6", "CatalogC6")
                        .WithMany()
                        .HasForeignKey("CatalogC6Id");

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("ItemC6s")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.EntityItemAmericanWheatley.ItemC7", b =>
                {
                    b.HasOne("Orion.Domain.EntityCatalogAmericanWheatley.CatalogC7", "CatalogC7")
                        .WithMany()
                        .HasForeignKey("CatalogC7Id");

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("ItemC7s")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.EntityItemBACClosedLoopTowers.ItemH1", b =>
                {
                    b.HasOne("Orion.Domain.EntityCatalogBACClosedLoopTowers.CatalogH1", "CatalogH1")
                        .WithMany()
                        .HasForeignKey("CatalogH1Id");

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("ItemH1s")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.EntityItemBACClosedLoopTowers.ItemH2", b =>
                {
                    b.HasOne("Orion.Domain.EntityCatalogBACClosedLoopTowers.CatalogH2", "CatalogH2")
                        .WithMany()
                        .HasForeignKey("CatalogH2Id");

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("ItemH2s")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.EntityItemBACClosedLoopTowers.ItemH3", b =>
                {
                    b.HasOne("Orion.Domain.EntityCatalogBACClosedLoopTowers.CatalogH3", "CatalogH3")
                        .WithMany()
                        .HasForeignKey("CatalogH3Id");

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("ItemH3s")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.EntityItemBACClosedLoopTowers.ItemH4", b =>
                {
                    b.HasOne("Orion.Domain.EntityCatalogBACClosedLoopTowers.CatalogH4", "CatalogH4")
                        .WithMany()
                        .HasForeignKey("CatalogH4Id");

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("ItemH4s")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.EntityItemBACClosedLoopTowers.ItemH5", b =>
                {
                    b.HasOne("Orion.Domain.EntityCatalogBACClosedLoopTowers.CatalogH5", "CatalogH5")
                        .WithMany()
                        .HasForeignKey("CatalogH5Id");

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("ItemH5s")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.EntityItemBACOpenLoopTowers.ItemG1", b =>
                {
                    b.HasOne("Orion.Domain.EntityCatalogBACOpenLoopTowers.CatalogG1", "CatalogG1")
                        .WithMany()
                        .HasForeignKey("CatalogG1Id");

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("ItemG1s")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.EntityItemBACOpenLoopTowers.ItemG2", b =>
                {
                    b.HasOne("Orion.Domain.EntityCatalogBACOpenLoopTowers.CatalogG2", "CatalogG2")
                        .WithMany()
                        .HasForeignKey("CatalogG2Id");

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("ItemG2s")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.EntityItemBACOpenLoopTowers.ItemG3", b =>
                {
                    b.HasOne("Orion.Domain.EntityCatalogBACOpenLoopTowers.CatalogG3", "CatalogG3")
                        .WithMany()
                        .HasForeignKey("CatalogG3Id");

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("ItemG3s")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.EntityItemBACOpenLoopTowers.ItemG4", b =>
                {
                    b.HasOne("Orion.Domain.EntityCatalogBACOpenLoopTowers.CatalogG4", "CatalogG4")
                        .WithMany()
                        .HasForeignKey("CatalogG4Id");

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("ItemG4s")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.EntityItemBACOpenLoopTowers.ItemG5", b =>
                {
                    b.HasOne("Orion.Domain.EntityCatalogBACOpenLoopTowers.CatalogG5", "CatalogG5")
                        .WithMany()
                        .HasForeignKey("CatalogG5Id");

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("ItemG5s")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.EntityItemBACOpenLoopTowers.ItemG6", b =>
                {
                    b.HasOne("Orion.Domain.EntityCatalogBACOpenLoopTowers.CatalogG6", "CatalogG6")
                        .WithMany()
                        .HasForeignKey("CatalogG6Id");

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("ItemG6s")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.EntityItemGeneralProduct.ItemL1", b =>
                {
                    b.HasOne("Orion.Domain.EntityCatalogGeneralProduct.CatalogL1", "CatalogL1")
                        .WithMany()
                        .HasForeignKey("CatalogL1Id");

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("ItemL1s")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.EntityItemGroundfos.ItemE1", b =>
                {
                    b.HasOne("Orion.Domain.EntityCatalogGroundfos.CatalogE1", "CatalogE1")
                        .WithMany()
                        .HasForeignKey("CatalogE1Id");

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("ItemE1s")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.EntityItemGroundfos.ItemE2", b =>
                {
                    b.HasOne("Orion.Domain.EntityCatalogGroundfos.CatalogE2", "CatalogE2")
                        .WithMany()
                        .HasForeignKey("CatalogE2Id");

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("ItemE2s")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.EntityItemGroundfos.ItemE3", b =>
                {
                    b.HasOne("Orion.Domain.EntityCatalogGroundfos.CatalogE3", "CatalogE3")
                        .WithMany()
                        .HasForeignKey("CatalogE3Id");

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("ItemE3s")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.EntityItemGroundfos.ItemE4", b =>
                {
                    b.HasOne("Orion.Domain.EntityCatalogGroundfos.CatalogE4", "CatalogE4")
                        .WithMany()
                        .HasForeignKey("CatalogE4Id");

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("ItemE4s")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.EntityItemGroundfos.ItemE5", b =>
                {
                    b.HasOne("Orion.Domain.EntityCatalogGroundfos.CatalogE5", "CatalogE5")
                        .WithMany()
                        .HasForeignKey("CatalogE5Id");

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("ItemE5s")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.EntityItemGroundfos.ItemE6", b =>
                {
                    b.HasOne("Orion.Domain.EntityCatalogGroundfos.CatalogE6", "CatalogE6")
                        .WithMany()
                        .HasForeignKey("CatalogE6Id");

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("ItemE6s")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.EntityItemGroundfos.ItemE7", b =>
                {
                    b.HasOne("Orion.Domain.EntityCatalogGroundfos.CatalogE7", "CatalogE7")
                        .WithMany()
                        .HasForeignKey("CatalogE7Id");

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("ItemE7s")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.EntityItemPuroFlux.ItemD1", b =>
                {
                    b.HasOne("Orion.Domain.EntityCatalogPuroflux.CatalogD1", "CatalogD1")
                        .WithMany()
                        .HasForeignKey("CatalogD1Id");

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("ItemD1s")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.EntityItemPuroFlux.ItemD2", b =>
                {
                    b.HasOne("Orion.Domain.EntityCatalogPuroflux.CatalogD2", "CatalogD2")
                        .WithMany()
                        .HasForeignKey("CatalogD2Id");

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("ItemD2s")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.EntityItemUvResources.ItemF1", b =>
                {
                    b.HasOne("Orion.Domain.EntityCatalogUvResources.CatalogF1", "CatalogF1")
                        .WithMany()
                        .HasForeignKey("CatalogF1Id");

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("ItemF1s")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.EnviroTec.Catalog.CatalogR1", b =>
                {
                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("Orion.Domain.EnviroTec.Catalog.CatalogR2", b =>
                {
                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("Orion.Domain.EnviroTec.Catalog.CatalogR3", b =>
                {
                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("Orion.Domain.EnviroTec.Catalog.CatalogR4", b =>
                {
                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("Orion.Domain.EnviroTec.Item.ItemR1", b =>
                {
                    b.HasOne("Orion.Domain.EnviroTec.Catalog.CatalogR1", "CatalogR1")
                        .WithMany()
                        .HasForeignKey("CatalogR1Id");

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("ItemR1s")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.EnviroTec.Item.ItemR2", b =>
                {
                    b.HasOne("Orion.Domain.EnviroTec.Catalog.CatalogR2", "CatalogR2")
                        .WithMany()
                        .HasForeignKey("CatalogR2Id");

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("ItemR2s")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.EnviroTec.Item.ItemR3", b =>
                {
                    b.HasOne("Orion.Domain.EnviroTec.Catalog.CatalogR3", "CatalogR3")
                        .WithMany()
                        .HasForeignKey("CatalogR3Id");

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("ItemR3s")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.EnviroTec.Item.ItemR4", b =>
                {
                    b.HasOne("Orion.Domain.EnviroTec.Catalog.CatalogR4", "CatalogR4")
                        .WithMany()
                        .HasForeignKey("CatalogR4Id");

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("ItemR4s")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.LYNC.Catalog.CatalogS1", b =>
                {
                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("Orion.Domain.LYNC.Item.ItemS1", b =>
                {
                    b.HasOne("Orion.Domain.LYNC.Catalog.CatalogS1", "CatalogS1")
                        .WithMany()
                        .HasForeignKey("CatalogS1Id");

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("ItemS1s")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.Marvair.Catalog.CatalogI2", b =>
                {
                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("Orion.Domain.Marvair.CatalogI1", b =>
                {
                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("Orion.Domain.Marvair.Item.ItemI1", b =>
                {
                    b.HasOne("Orion.Domain.Marvair.CatalogI1", "CatalogI1")
                        .WithMany()
                        .HasForeignKey("CatalogI1Id");

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("ItemI1s")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.Marvair.Item.ItemI2", b =>
                {
                    b.HasOne("Orion.Domain.Marvair.Catalog.CatalogI2", "CatalogI2")
                        .WithMany()
                        .HasForeignKey("CatalogI2Id");

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("ItemI2s")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.Multiaqua.Catalog.CatalogK1", b =>
                {
                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("Orion.Domain.Multiaqua.Catalog.CatalogK2", b =>
                {
                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("Orion.Domain.Multiaqua.Catalog.CatalogK3", b =>
                {
                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("Orion.Domain.Multiaqua.Item.ItemK1", b =>
                {
                    b.HasOne("Orion.Domain.Multiaqua.Catalog.CatalogK1", "CatalogK1")
                        .WithMany()
                        .HasForeignKey("CatalogK1Id");

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("ItemK1s")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.Multiaqua.Item.ItemK2", b =>
                {
                    b.HasOne("Orion.Domain.Multiaqua.Catalog.CatalogK2", "CatalogK2")
                        .WithMany()
                        .HasForeignKey("CatalogK2Id");

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("ItemK2s")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.Multiaqua.Item.ItemK3", b =>
                {
                    b.HasOne("Orion.Domain.Multiaqua.Catalog.CatalogK3", "CatalogK3")
                        .WithMany()
                        .HasForeignKey("CatalogK3Id");

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("ItemK3s")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.Nortek.Catalog.CatalogT1", b =>
                {
                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("Orion.Domain.Nortek.Catalog.CatalogT2", b =>
                {
                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("Orion.Domain.Nortek.Catalog.CatalogT3", b =>
                {
                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("Orion.Domain.Nortek.Item.ItemT1", b =>
                {
                    b.HasOne("Orion.Domain.Nortek.Catalog.CatalogT1", "CatalogT1")
                        .WithMany()
                        .HasForeignKey("CatalogT1Id");

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("ItemT1s")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.Nortek.Item.ItemT2", b =>
                {
                    b.HasOne("Orion.Domain.Nortek.Catalog.CatalogT2", "CatalogT2")
                        .WithMany()
                        .HasForeignKey("CatalogT2Id");

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("ItemT2s")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.Nortek.Item.ItemT3", b =>
                {
                    b.HasOne("Orion.Domain.Nortek.Catalog.CatalogT3", "CatalogT3")
                        .WithMany()
                        .HasForeignKey("CatalogT3Id");

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("ItemT3s")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.NYLE.Catalog.CatalogU1", b =>
                {
                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("Orion.Domain.NYLE.Item.ItemU1", b =>
                {
                    b.HasOne("Orion.Domain.NYLE.Catalog.CatalogU1", "CatalogU1")
                        .WithMany()
                        .HasForeignKey("CatalogU1Id");

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("ItemU1s")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.PACE.Catalog.CatalogJ1", b =>
                {
                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("Orion.Domain.PACE.Item.ItemJ1", b =>
                {
                    b.HasOne("Orion.Domain.PACE.Catalog.CatalogJ1", "CatalogJ1")
                        .WithMany()
                        .HasForeignKey("CatalogJ1Id");

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("ItemJ1s")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.PlasmaAir.Catalog.CatalogV1", b =>
                {
                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("Orion.Domain.PlasmaAir.Item.ItemV1", b =>
                {
                    b.HasOne("Orion.Domain.PlasmaAir.Catalog.CatalogV1", "CatalogV1")
                        .WithMany()
                        .HasForeignKey("CatalogV1Id");

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("ItemV1s")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.Polaris.Catalog.CatalogW1", b =>
                {
                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("Orion.Domain.Polaris.Item.ItemW1", b =>
                {
                    b.HasOne("Orion.Domain.Polaris.Catalog.CatalogW1", "CatalogW1")
                        .WithMany()
                        .HasForeignKey("CatalogW1Id");

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("ItemW1s")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.PVI.Catalog.CatalogX1", b =>
                {
                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("Orion.Domain.PVI.Catalog.CatalogX2", b =>
                {
                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("Orion.Domain.PVI.Catalog.CatalogX3", b =>
                {
                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("Orion.Domain.PVI.Catalog.CatalogX4", b =>
                {
                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("Orion.Domain.PVI.Catalog.CatalogX5", b =>
                {
                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("Orion.Domain.PVI.Item.ItemX1", b =>
                {
                    b.HasOne("Orion.Domain.PVI.Catalog.CatalogX1", "CatalogX1")
                        .WithMany()
                        .HasForeignKey("CatalogX1Id");

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("ItemX1s")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.PVI.Item.ItemX2", b =>
                {
                    b.HasOne("Orion.Domain.PVI.Catalog.CatalogX2", "CatalogX2")
                        .WithMany()
                        .HasForeignKey("CatalogX2Id");

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("ItemX2s")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.PVI.Item.ItemX3", b =>
                {
                    b.HasOne("Orion.Domain.PVI.Catalog.CatalogX3", "CatalogX3")
                        .WithMany()
                        .HasForeignKey("CatalogX3Id");

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("ItemX3s")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.PVI.Item.ItemX4", b =>
                {
                    b.HasOne("Orion.Domain.PVI.Catalog.CatalogX4", "CatalogX4")
                        .WithMany()
                        .HasForeignKey("CatalogX4Id");

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("ItemX4s")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.PVI.Item.ItemX5", b =>
                {
                    b.HasOne("Orion.Domain.PVI.Catalog.CatalogX5", "CatalogX5")
                        .WithMany()
                        .HasForeignKey("CatalogX5Id");

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("ItemX5s")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.Robur.Catalog.CatalogY1", b =>
                {
                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("Orion.Domain.Robur.Item.ItemY1", b =>
                {
                    b.HasOne("Orion.Domain.Robur.Catalog.CatalogY1", "CatalogY1")
                        .WithMany()
                        .HasForeignKey("CatalogY1Id");

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("ItemY1s")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.UMAS.Catalog.CatalogM1", b =>
                {
                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("Orion.Domain.UMAS.Item.ItemM1", b =>
                {
                    b.HasOne("Orion.Domain.UMAS.Catalog.CatalogM1", "CatalogM1")
                        .WithMany()
                        .HasForeignKey("CatalogM1Id");

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("ItemM1s")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.Valent.Catalog.CatalogZ1", b =>
                {
                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("Orion.Domain.Valent.Item.ItemZ1", b =>
                {
                    b.HasOne("Orion.Domain.Valent.Catalog.CatalogZ1", "CatalogZ1")
                        .WithMany()
                        .HasForeignKey("CatalogZ1Id");

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("ItemZ1s")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.Whalen.Catalog.CatalogAA1", b =>
                {
                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("Orion.Domain.Whalen.Item.ItemAA1", b =>
                {
                    b.HasOne("Orion.Domain.Whalen.Catalog.CatalogAA1", "CatalogAA1")
                        .WithMany()
                        .HasForeignKey("CatalogAA1Id");

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("ItemAA1s")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
