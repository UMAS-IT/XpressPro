// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Orion.DataAccess.DataBase;

namespace Orion.DataAccess.Migrations
{
    [DbContext(typeof(GlobalDbContext))]
    [Migration("20230304001102_mig-15")]
    partial class mig15
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.0-rtm-30799")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Orion.Domain.Entity.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("Orion.Domain.Entity.DataSheet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ProductId");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("DataSheets");
                });

            modelBuilder.Entity("Orion.Domain.Entity.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Color");

                    b.Property<int>("CompanyId");

                    b.Property<string>("Index");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Orion.Domain.Entity.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Contact");

                    b.Property<string>("Contractor");

                    b.Property<DateTime>("CreationDate");

                    b.Property<string>("Engineer");

                    b.Property<string>("Location");

                    b.Property<string>("Name");

                    b.Property<string>("Notes");

                    b.Property<int>("Number");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("Orion.Domain.Entity.Quote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<int>("ProjectId");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("Quotes");
                });

            modelBuilder.Entity("Orion.Domain.Entity.Spec", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<double>("Price");

                    b.Property<int>("TitleId");

                    b.HasKey("Id");

                    b.HasIndex("TitleId");

                    b.ToTable("Specs");
                });

            modelBuilder.Entity("Orion.Domain.Entity.Title", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DataSheetId");

                    b.Property<int?>("ItemA1Id");

                    b.Property<int?>("ItemA2Id");

                    b.Property<int?>("ItemA3Id");

                    b.Property<int?>("ItemA4Id");

                    b.Property<int?>("ItemB1Id");

                    b.Property<int?>("ItemB2Id");

                    b.Property<int?>("ItemB3Id");

                    b.Property<int?>("ItemB4Id");

                    b.Property<int?>("ItemB5Id");

                    b.Property<int?>("ItemC1Id");

                    b.Property<int?>("ItemC2Id");

                    b.Property<int?>("ItemC3Id");

                    b.Property<int?>("ItemC4Id");

                    b.Property<int?>("ItemD1Id");

                    b.Property<int?>("ItemD2Id");

                    b.Property<int?>("ItemE1Id");

                    b.Property<int?>("ItemE2Id");

                    b.Property<int?>("ItemE3Id");

                    b.Property<int?>("ItemE4Id");

                    b.Property<int?>("ItemE5Id");

                    b.Property<int?>("ItemE6Id");

                    b.Property<int?>("ItemE7Id");

                    b.Property<int?>("ItemF1Id");

                    b.Property<int?>("ItemG1Id");

                    b.Property<int?>("ItemG2Id");

                    b.Property<int?>("ItemG3Id");

                    b.Property<int?>("ItemG4Id");

                    b.Property<int?>("ItemG5Id");

                    b.Property<int?>("ItemG6Id");

                    b.Property<int?>("ItemH1Id");

                    b.Property<int?>("ItemH2Id");

                    b.Property<int?>("ItemH3Id");

                    b.Property<int?>("ItemH4Id");

                    b.Property<int?>("ItemH5Id");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.HasIndex("ItemA1Id");

                    b.HasIndex("ItemA2Id");

                    b.HasIndex("ItemA3Id");

                    b.HasIndex("ItemA4Id");

                    b.HasIndex("ItemB1Id");

                    b.HasIndex("ItemB2Id");

                    b.HasIndex("ItemB3Id");

                    b.HasIndex("ItemB4Id");

                    b.HasIndex("ItemB5Id");

                    b.HasIndex("ItemC1Id");

                    b.HasIndex("ItemC2Id");

                    b.HasIndex("ItemC3Id");

                    b.HasIndex("ItemC4Id");

                    b.HasIndex("ItemD1Id");

                    b.HasIndex("ItemD2Id");

                    b.HasIndex("ItemE1Id");

                    b.HasIndex("ItemE2Id");

                    b.HasIndex("ItemE3Id");

                    b.HasIndex("ItemE4Id");

                    b.HasIndex("ItemE5Id");

                    b.HasIndex("ItemE6Id");

                    b.HasIndex("ItemE7Id");

                    b.HasIndex("ItemF1Id");

                    b.HasIndex("ItemG1Id");

                    b.HasIndex("ItemG2Id");

                    b.HasIndex("ItemG3Id");

                    b.HasIndex("ItemG4Id");

                    b.HasIndex("ItemG5Id");

                    b.HasIndex("ItemG6Id");

                    b.HasIndex("ItemH1Id");

                    b.HasIndex("ItemH2Id");

                    b.HasIndex("ItemH3Id");

                    b.HasIndex("ItemH4Id");

                    b.HasIndex("ItemH5Id");

                    b.ToTable("Titles");
                });

            modelBuilder.Entity("Orion.Domain.Entity.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email");

                    b.Property<string>("LoginName");

                    b.Property<string>("Name");

                    b.Property<string>("PassKey");

                    b.Property<string>("Telephone");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogABB.CatalogB1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Bypass");

                    b.Property<bool>("CircuitBreakerDisconnect");

                    b.Property<double>("CostMultiplier");

                    b.Property<int?>("DataSheetId");

                    b.Property<string>("Description");

                    b.Property<double>("Hp");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<string>("Nema");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Voltage");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.ToTable("CatalogB1s");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogABB.CatalogB2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Bypass");

                    b.Property<bool>("CircuitBreakerDisconnect");

                    b.Property<double>("CostMultiplier");

                    b.Property<int?>("DataSheetId");

                    b.Property<string>("Description");

                    b.Property<double>("Hp");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<string>("Nema");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Voltage");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.ToTable("CatalogB2s");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogABB.CatalogB3", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Bypass");

                    b.Property<bool>("CircuitBreakerDisconnect");

                    b.Property<double>("CostMultiplier");

                    b.Property<int?>("DataSheetId");

                    b.Property<string>("Description");

                    b.Property<double>("Hp");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<string>("Nema");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Voltage");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.ToTable("CatalogB3s");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogABB.CatalogB4", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Bypass");

                    b.Property<bool>("CircuitBreakerDisconnect");

                    b.Property<double>("CostMultiplier");

                    b.Property<int?>("DataSheetId");

                    b.Property<string>("Description");

                    b.Property<double>("Hp");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<string>("Nema");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Voltage");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.ToTable("CatalogB4s");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogABB.CatalogB5", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CostMultiplier");

                    b.Property<int?>("DataSheetId");

                    b.Property<string>("Description");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<double>("SellMargin");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.ToTable("CatalogB5s");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogAmericanWheatley.CatalogC1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CostMultiplier");

                    b.Property<int?>("DataSheetId");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<double>("SellMargin");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.ToTable("CatalogC1s");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogAmericanWheatley.CatalogC2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CostMultiplier");

                    b.Property<int?>("DataSheetId");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<double>("SellMargin");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.ToTable("CatalogC2s");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogAmericanWheatley.CatalogC3", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CostMultiplier");

                    b.Property<int?>("DataSheetId");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<double>("SellMargin");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.ToTable("CatalogC3s");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogAmericanWheatley.CatalogC4", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CostMultiplier");

                    b.Property<int?>("DataSheetId");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<double>("SellMargin");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.ToTable("CatalogC4s");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogBACClosedCircuits.CatalogH1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CostMultiplier");

                    b.Property<int?>("DataSheetId");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<double>("SellMargin");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.ToTable("CatalogH1s");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogBACClosedCircuits.CatalogH2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CostMultiplier");

                    b.Property<int?>("DataSheetId");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<double>("SellMargin");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.ToTable("CatalogH2s");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogBACClosedCircuits.CatalogH3", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CostMultiplier");

                    b.Property<int?>("DataSheetId");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<double>("SellMargin");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.ToTable("CatalogH3s");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogBACClosedCircuits.CatalogH4", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CostMultiplier");

                    b.Property<int?>("DataSheetId");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<double>("SellMargin");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.ToTable("CatalogH4s");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogBACClosedCircuits.CatalogH5", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CostMultiplier");

                    b.Property<int?>("DataSheetId");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<double>("SellMargin");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.ToTable("CatalogH5s");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogBACCoolingTowers.CatalogG1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CostMultiplier");

                    b.Property<int?>("DataSheetId");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<double>("SellMargin");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.ToTable("CatalogG1s");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogBACCoolingTowers.CatalogG2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CostMultiplier");

                    b.Property<int?>("DataSheetId");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<double>("SellMargin");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.ToTable("CatalogG2s");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogBACCoolingTowers.CatalogG3", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CostMultiplier");

                    b.Property<int?>("DataSheetId");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<double>("SellMargin");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.ToTable("CatalogG3s");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogBACCoolingTowers.CatalogG4", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CostMultiplier");

                    b.Property<int?>("DataSheetId");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<double>("SellMargin");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.ToTable("CatalogG4s");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogBACCoolingTowers.CatalogG5", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CostMultiplier");

                    b.Property<int?>("DataSheetId");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<double>("SellMargin");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.ToTable("CatalogG5s");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogBACCoolingTowers.CatalogG6", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CostMultiplier");

                    b.Property<int?>("DataSheetId");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<double>("SellMargin");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.ToTable("CatalogG6s");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogGroundfos.CatalogE1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CostMultiplier");

                    b.Property<int?>("DataSheetId");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<double>("SellMargin");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.ToTable("CatalogE1s");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogGroundfos.CatalogE2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CostMultiplier");

                    b.Property<int?>("DataSheetId");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<double>("SellMargin");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.ToTable("CatalogE2s");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogGroundfos.CatalogE3", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CostMultiplier");

                    b.Property<int?>("DataSheetId");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<double>("SellMargin");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.ToTable("CatalogE3s");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogGroundfos.CatalogE4", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CostMultiplier");

                    b.Property<int?>("DataSheetId");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<double>("SellMargin");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.ToTable("CatalogE4s");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogGroundfos.CatalogE5", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CostMultiplier");

                    b.Property<int?>("DataSheetId");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<double>("SellMargin");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.ToTable("CatalogE5s");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogGroundfos.CatalogE6", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CostMultiplier");

                    b.Property<int?>("DataSheetId");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<double>("SellMargin");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.ToTable("CatalogE6s");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogGroundfos.CatalogE7", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CostMultiplier");

                    b.Property<int?>("DataSheetId");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<double>("SellMargin");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.ToTable("CatalogE7s");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogPuroflux.CatalogD1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CostMultiplier");

                    b.Property<int?>("DataSheetId");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<double>("SellMargin");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.ToTable("CatalogD1s");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogPuroflux.CatalogD2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CostMultiplier");

                    b.Property<int?>("DataSheetId");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<double>("SellMargin");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.ToTable("CatalogD2s");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogQuantech.CatalogA1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CostMultiplier");

                    b.Property<int?>("DataSheetId");

                    b.Property<string>("Description");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<double>("SellMargin");

                    b.Property<string>("UnitSize");

                    b.Property<string>("Voltage");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.ToTable("CatalogA1s");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogQuantech.CatalogA2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CostMultiplier");

                    b.Property<int?>("DataSheetId");

                    b.Property<string>("Description");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<double>("SellMargin");

                    b.Property<string>("UnitSize");

                    b.Property<string>("Voltage");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.ToTable("CatalogA2s");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogQuantech.CatalogA3", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CostMultiplier");

                    b.Property<int?>("DataSheetId");

                    b.Property<string>("Description");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<double>("SellMargin");

                    b.Property<string>("UnitSize");

                    b.Property<string>("Voltage");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.ToTable("CatalogA3s");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogQuantech.CatalogA4", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CostMultiplier");

                    b.Property<int?>("DataSheetId");

                    b.Property<string>("Description");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<double>("SellMargin");

                    b.Property<string>("UnitSize");

                    b.Property<string>("Voltage");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.ToTable("CatalogA4s");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogUvResources.CatalogF1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CostMultiplier");

                    b.Property<int?>("DataSheetId");

                    b.Property<double>("ListPrice");

                    b.Property<string>("Model");

                    b.Property<double>("SellMargin");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.ToTable("CatalogF1s");
                });

            modelBuilder.Entity("Orion.Domain.EntityItem.ItemA1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogA1Id");

                    b.Property<double>("CostMultiplier");

                    b.Property<int>("DesignIndex");

                    b.Property<bool>("IsExcluded");

                    b.Property<double>("ListPrice");

                    b.Property<bool>("OverridePrice");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuoteId");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Tag");

                    b.HasKey("Id");

                    b.HasIndex("CatalogA1Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("ItemA1s");
                });

            modelBuilder.Entity("Orion.Domain.EntityItem.ItemA2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogA2Id");

                    b.Property<double>("CostMultiplier");

                    b.Property<int>("DesignIndex");

                    b.Property<bool>("IsExcluded");

                    b.Property<double>("ListPrice");

                    b.Property<bool>("OverridePrice");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuoteId");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Tag");

                    b.HasKey("Id");

                    b.HasIndex("CatalogA2Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("ItemA2s");
                });

            modelBuilder.Entity("Orion.Domain.EntityItem.ItemA3", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogA3Id");

                    b.Property<double>("CostMultiplier");

                    b.Property<int>("DesignIndex");

                    b.Property<bool>("IsExcluded");

                    b.Property<double>("ListPrice");

                    b.Property<bool>("OverridePrice");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuoteId");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Tag");

                    b.HasKey("Id");

                    b.HasIndex("CatalogA3Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("ItemA3s");
                });

            modelBuilder.Entity("Orion.Domain.EntityItem.ItemA4", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogA4Id");

                    b.Property<double>("CostMultiplier");

                    b.Property<int>("DesignIndex");

                    b.Property<bool>("IsExcluded");

                    b.Property<double>("ListPrice");

                    b.Property<bool>("OverridePrice");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuoteId");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Tag");

                    b.HasKey("Id");

                    b.HasIndex("CatalogA4Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("ItemA4s");
                });

            modelBuilder.Entity("Orion.Domain.EntityItemABB.ItemB1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogB1Id");

                    b.Property<double>("CostMultiplier");

                    b.Property<int>("DesignIndex");

                    b.Property<bool>("IsExcluded");

                    b.Property<double>("ListPrice");

                    b.Property<bool>("OverridePrice");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuoteId");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Tag");

                    b.HasKey("Id");

                    b.HasIndex("CatalogB1Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("ItemB1s");
                });

            modelBuilder.Entity("Orion.Domain.EntityItemABB.ItemB2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogB2Id");

                    b.Property<double>("CostMultiplier");

                    b.Property<int>("DesignIndex");

                    b.Property<bool>("IsExcluded");

                    b.Property<double>("ListPrice");

                    b.Property<bool>("OverridePrice");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuoteId");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Tag");

                    b.HasKey("Id");

                    b.HasIndex("CatalogB2Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("ItemB2s");
                });

            modelBuilder.Entity("Orion.Domain.EntityItemABB.ItemB3", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogB3Id");

                    b.Property<double>("CostMultiplier");

                    b.Property<int>("DesignIndex");

                    b.Property<bool>("IsExcluded");

                    b.Property<double>("ListPrice");

                    b.Property<bool>("OverridePrice");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuoteId");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Tag");

                    b.HasKey("Id");

                    b.HasIndex("CatalogB3Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("ItemB3s");
                });

            modelBuilder.Entity("Orion.Domain.EntityItemABB.ItemB4", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogB4Id");

                    b.Property<double>("CostMultiplier");

                    b.Property<int>("DesignIndex");

                    b.Property<bool>("IsExcluded");

                    b.Property<double>("ListPrice");

                    b.Property<bool>("OverridePrice");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuoteId");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Tag");

                    b.HasKey("Id");

                    b.HasIndex("CatalogB4Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("ItemB4s");
                });

            modelBuilder.Entity("Orion.Domain.EntityItemABB.ItemB5", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogB5Id");

                    b.Property<double>("CostMultiplier");

                    b.Property<int>("DesignIndex");

                    b.Property<bool>("IsExcluded");

                    b.Property<double>("ListPrice");

                    b.Property<bool>("OverridePrice");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuoteId");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Tag");

                    b.HasKey("Id");

                    b.HasIndex("CatalogB5Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("ItemB5s");
                });

            modelBuilder.Entity("Orion.Domain.EntityItemAmericanWheatley.ItemC1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogC1Id");

                    b.Property<double>("CostMultiplier");

                    b.Property<int>("DesignIndex");

                    b.Property<bool>("IsExcluded");

                    b.Property<double>("ListPrice");

                    b.Property<bool>("OverridePrice");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuoteId");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Tag");

                    b.HasKey("Id");

                    b.HasIndex("CatalogC1Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("ItemC1s");
                });

            modelBuilder.Entity("Orion.Domain.EntityItemAmericanWheatley.ItemC2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogC2Id");

                    b.Property<double>("CostMultiplier");

                    b.Property<int>("DesignIndex");

                    b.Property<bool>("IsExcluded");

                    b.Property<double>("ListPrice");

                    b.Property<bool>("OverridePrice");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuoteId");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Tag");

                    b.HasKey("Id");

                    b.HasIndex("CatalogC2Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("ItemC2s");
                });

            modelBuilder.Entity("Orion.Domain.EntityItemAmericanWheatley.ItemC3", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogC3Id");

                    b.Property<double>("CostMultiplier");

                    b.Property<int>("DesignIndex");

                    b.Property<bool>("IsExcluded");

                    b.Property<double>("ListPrice");

                    b.Property<bool>("OverridePrice");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuoteId");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Tag");

                    b.HasKey("Id");

                    b.HasIndex("CatalogC3Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("ItemC3s");
                });

            modelBuilder.Entity("Orion.Domain.EntityItemAmericanWheatley.ItemC4", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogC4Id");

                    b.Property<double>("CostMultiplier");

                    b.Property<int>("DesignIndex");

                    b.Property<bool>("IsExcluded");

                    b.Property<double>("ListPrice");

                    b.Property<bool>("OverridePrice");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuoteId");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Tag");

                    b.HasKey("Id");

                    b.HasIndex("CatalogC4Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("ItemC4s");
                });

            modelBuilder.Entity("Orion.Domain.EntityItemBACClosedCircuits.ItemH1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogH1Id");

                    b.Property<double>("CostMultiplier");

                    b.Property<int>("DesignIndex");

                    b.Property<bool>("IsExcluded");

                    b.Property<double>("ListPrice");

                    b.Property<bool>("OverridePrice");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuoteId");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Tag");

                    b.HasKey("Id");

                    b.HasIndex("CatalogH1Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("ItemH1s");
                });

            modelBuilder.Entity("Orion.Domain.EntityItemBACClosedCircuits.ItemH2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogH2Id");

                    b.Property<double>("CostMultiplier");

                    b.Property<int>("DesignIndex");

                    b.Property<bool>("IsExcluded");

                    b.Property<double>("ListPrice");

                    b.Property<bool>("OverridePrice");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuoteId");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Tag");

                    b.HasKey("Id");

                    b.HasIndex("CatalogH2Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("ItemH2s");
                });

            modelBuilder.Entity("Orion.Domain.EntityItemBACClosedCircuits.ItemH3", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogH3Id");

                    b.Property<double>("CostMultiplier");

                    b.Property<int>("DesignIndex");

                    b.Property<bool>("IsExcluded");

                    b.Property<double>("ListPrice");

                    b.Property<bool>("OverridePrice");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuoteId");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Tag");

                    b.HasKey("Id");

                    b.HasIndex("CatalogH3Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("ItemH3s");
                });

            modelBuilder.Entity("Orion.Domain.EntityItemBACClosedCircuits.ItemH4", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogH4Id");

                    b.Property<double>("CostMultiplier");

                    b.Property<int>("DesignIndex");

                    b.Property<bool>("IsExcluded");

                    b.Property<double>("ListPrice");

                    b.Property<bool>("OverridePrice");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuoteId");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Tag");

                    b.HasKey("Id");

                    b.HasIndex("CatalogH4Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("ItemH4s");
                });

            modelBuilder.Entity("Orion.Domain.EntityItemBACClosedCircuits.ItemH5", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogH5Id");

                    b.Property<double>("CostMultiplier");

                    b.Property<int>("DesignIndex");

                    b.Property<bool>("IsExcluded");

                    b.Property<double>("ListPrice");

                    b.Property<bool>("OverridePrice");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuoteId");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Tag");

                    b.HasKey("Id");

                    b.HasIndex("CatalogH5Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("ItemH5s");
                });

            modelBuilder.Entity("Orion.Domain.EntityItemBACCoolingTowers.ItemG1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogG1Id");

                    b.Property<double>("CostMultiplier");

                    b.Property<int>("DesignIndex");

                    b.Property<bool>("IsExcluded");

                    b.Property<double>("ListPrice");

                    b.Property<bool>("OverridePrice");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuoteId");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Tag");

                    b.HasKey("Id");

                    b.HasIndex("CatalogG1Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("ItemG1s");
                });

            modelBuilder.Entity("Orion.Domain.EntityItemBACCoolingTowers.ItemG2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogG2Id");

                    b.Property<double>("CostMultiplier");

                    b.Property<int>("DesignIndex");

                    b.Property<bool>("IsExcluded");

                    b.Property<double>("ListPrice");

                    b.Property<bool>("OverridePrice");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuoteId");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Tag");

                    b.HasKey("Id");

                    b.HasIndex("CatalogG2Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("ItemG2s");
                });

            modelBuilder.Entity("Orion.Domain.EntityItemBACCoolingTowers.ItemG3", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogG3Id");

                    b.Property<double>("CostMultiplier");

                    b.Property<int>("DesignIndex");

                    b.Property<bool>("IsExcluded");

                    b.Property<double>("ListPrice");

                    b.Property<bool>("OverridePrice");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuoteId");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Tag");

                    b.HasKey("Id");

                    b.HasIndex("CatalogG3Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("ItemG3s");
                });

            modelBuilder.Entity("Orion.Domain.EntityItemBACCoolingTowers.ItemG4", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogG4Id");

                    b.Property<double>("CostMultiplier");

                    b.Property<int>("DesignIndex");

                    b.Property<bool>("IsExcluded");

                    b.Property<double>("ListPrice");

                    b.Property<bool>("OverridePrice");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuoteId");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Tag");

                    b.HasKey("Id");

                    b.HasIndex("CatalogG4Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("ItemG4s");
                });

            modelBuilder.Entity("Orion.Domain.EntityItemBACCoolingTowers.ItemG5", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogG5Id");

                    b.Property<double>("CostMultiplier");

                    b.Property<int>("DesignIndex");

                    b.Property<bool>("IsExcluded");

                    b.Property<double>("ListPrice");

                    b.Property<bool>("OverridePrice");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuoteId");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Tag");

                    b.HasKey("Id");

                    b.HasIndex("CatalogG5Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("ItemG5s");
                });

            modelBuilder.Entity("Orion.Domain.EntityItemBACCoolingTowers.ItemG6", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogG6Id");

                    b.Property<double>("CostMultiplier");

                    b.Property<int>("DesignIndex");

                    b.Property<bool>("IsExcluded");

                    b.Property<double>("ListPrice");

                    b.Property<bool>("OverridePrice");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuoteId");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Tag");

                    b.HasKey("Id");

                    b.HasIndex("CatalogG6Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("ItemG6s");
                });

            modelBuilder.Entity("Orion.Domain.EntityItemGroundfos.ItemE1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogE1Id");

                    b.Property<double>("CostMultiplier");

                    b.Property<int>("DesignIndex");

                    b.Property<bool>("IsExcluded");

                    b.Property<double>("ListPrice");

                    b.Property<bool>("OverridePrice");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuoteId");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Tag");

                    b.HasKey("Id");

                    b.HasIndex("CatalogE1Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("ItemE1s");
                });

            modelBuilder.Entity("Orion.Domain.EntityItemGroundfos.ItemE2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogE2Id");

                    b.Property<double>("CostMultiplier");

                    b.Property<int>("DesignIndex");

                    b.Property<bool>("IsExcluded");

                    b.Property<double>("ListPrice");

                    b.Property<bool>("OverridePrice");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuoteId");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Tag");

                    b.HasKey("Id");

                    b.HasIndex("CatalogE2Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("ItemE2s");
                });

            modelBuilder.Entity("Orion.Domain.EntityItemGroundfos.ItemE3", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogE3Id");

                    b.Property<double>("CostMultiplier");

                    b.Property<int>("DesignIndex");

                    b.Property<bool>("IsExcluded");

                    b.Property<double>("ListPrice");

                    b.Property<bool>("OverridePrice");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuoteId");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Tag");

                    b.HasKey("Id");

                    b.HasIndex("CatalogE3Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("ItemE3s");
                });

            modelBuilder.Entity("Orion.Domain.EntityItemGroundfos.ItemE4", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogE4Id");

                    b.Property<double>("CostMultiplier");

                    b.Property<int>("DesignIndex");

                    b.Property<bool>("IsExcluded");

                    b.Property<double>("ListPrice");

                    b.Property<bool>("OverridePrice");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuoteId");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Tag");

                    b.HasKey("Id");

                    b.HasIndex("CatalogE4Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("ItemE4s");
                });

            modelBuilder.Entity("Orion.Domain.EntityItemGroundfos.ItemE5", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogE5Id");

                    b.Property<double>("CostMultiplier");

                    b.Property<int>("DesignIndex");

                    b.Property<bool>("IsExcluded");

                    b.Property<double>("ListPrice");

                    b.Property<bool>("OverridePrice");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuoteId");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Tag");

                    b.HasKey("Id");

                    b.HasIndex("CatalogE5Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("ItemE5s");
                });

            modelBuilder.Entity("Orion.Domain.EntityItemGroundfos.ItemE6", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogE6Id");

                    b.Property<double>("CostMultiplier");

                    b.Property<int>("DesignIndex");

                    b.Property<bool>("IsExcluded");

                    b.Property<double>("ListPrice");

                    b.Property<bool>("OverridePrice");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuoteId");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Tag");

                    b.HasKey("Id");

                    b.HasIndex("CatalogE6Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("ItemE6s");
                });

            modelBuilder.Entity("Orion.Domain.EntityItemGroundfos.ItemE7", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogE7Id");

                    b.Property<double>("CostMultiplier");

                    b.Property<int>("DesignIndex");

                    b.Property<bool>("IsExcluded");

                    b.Property<double>("ListPrice");

                    b.Property<bool>("OverridePrice");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuoteId");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Tag");

                    b.HasKey("Id");

                    b.HasIndex("CatalogE7Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("ItemE7s");
                });

            modelBuilder.Entity("Orion.Domain.EntityItemPuroFlux.ItemD1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogD1Id");

                    b.Property<double>("CostMultiplier");

                    b.Property<int>("DesignIndex");

                    b.Property<bool>("IsExcluded");

                    b.Property<double>("ListPrice");

                    b.Property<bool>("OverridePrice");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuoteId");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Tag");

                    b.HasKey("Id");

                    b.HasIndex("CatalogD1Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("ItemD1s");
                });

            modelBuilder.Entity("Orion.Domain.EntityItemPuroFlux.ItemD2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogD2Id");

                    b.Property<double>("CostMultiplier");

                    b.Property<int>("DesignIndex");

                    b.Property<bool>("IsExcluded");

                    b.Property<double>("ListPrice");

                    b.Property<bool>("OverridePrice");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuoteId");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Tag");

                    b.HasKey("Id");

                    b.HasIndex("CatalogD2Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("ItemD2s");
                });

            modelBuilder.Entity("Orion.Domain.EntityItemUvResources.ItemF1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogF1Id");

                    b.Property<double>("CostMultiplier");

                    b.Property<int>("DesignIndex");

                    b.Property<bool>("IsExcluded");

                    b.Property<double>("ListPrice");

                    b.Property<bool>("OverridePrice");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuoteId");

                    b.Property<double>("SellMargin");

                    b.Property<string>("Tag");

                    b.HasKey("Id");

                    b.HasIndex("CatalogF1Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("ItemF1s");
                });

            modelBuilder.Entity("Orion.Domain.Entity.DataSheet", b =>
                {
                    b.HasOne("Orion.Domain.Entity.Product", "Product")
                        .WithMany("DataSheets")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.Entity.Product", b =>
                {
                    b.HasOne("Orion.Domain.Entity.Company", "Company")
                        .WithMany("Products")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.Entity.Project", b =>
                {
                    b.HasOne("Orion.Domain.Entity.User", "User")
                        .WithMany("Projects")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.Entity.Quote", b =>
                {
                    b.HasOne("Orion.Domain.Entity.Project", "Project")
                        .WithMany("Quotes")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.Entity.Spec", b =>
                {
                    b.HasOne("Orion.Domain.Entity.Title", "Title")
                        .WithMany("Specs")
                        .HasForeignKey("TitleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.Entity.Title", b =>
                {
                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany("Titles")
                        .HasForeignKey("DataSheetId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.EntityItem.ItemA1", "ItemA1")
                        .WithMany("Titles")
                        .HasForeignKey("ItemA1Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.EntityItem.ItemA2", "ItemA2")
                        .WithMany("Titles")
                        .HasForeignKey("ItemA2Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.EntityItem.ItemA3", "ItemA3")
                        .WithMany("Titles")
                        .HasForeignKey("ItemA3Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.EntityItem.ItemA4", "ItemA4")
                        .WithMany("Titles")
                        .HasForeignKey("ItemA4Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.EntityItemABB.ItemB1", "ItemB1")
                        .WithMany("Titles")
                        .HasForeignKey("ItemB1Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.EntityItemABB.ItemB2", "ItemB2")
                        .WithMany("Titles")
                        .HasForeignKey("ItemB2Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.EntityItemABB.ItemB3", "ItemB3")
                        .WithMany("Titles")
                        .HasForeignKey("ItemB3Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.EntityItemABB.ItemB4", "ItemB4")
                        .WithMany("Titles")
                        .HasForeignKey("ItemB4Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.EntityItemABB.ItemB5", "ItemB5")
                        .WithMany("Titles")
                        .HasForeignKey("ItemB5Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.EntityItemAmericanWheatley.ItemC1", "ItemC1")
                        .WithMany("Titles")
                        .HasForeignKey("ItemC1Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.EntityItemAmericanWheatley.ItemC2", "ItemC2")
                        .WithMany("Titles")
                        .HasForeignKey("ItemC2Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.EntityItemAmericanWheatley.ItemC3", "ItemC3")
                        .WithMany("Titles")
                        .HasForeignKey("ItemC3Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.EntityItemAmericanWheatley.ItemC4", "ItemC4")
                        .WithMany("Titles")
                        .HasForeignKey("ItemC4Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.EntityItemPuroFlux.ItemD1", "ItemD1")
                        .WithMany("Titles")
                        .HasForeignKey("ItemD1Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.EntityItemPuroFlux.ItemD2", "ItemD2")
                        .WithMany("Titles")
                        .HasForeignKey("ItemD2Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.EntityItemGroundfos.ItemE1", "ItemE1")
                        .WithMany("Titles")
                        .HasForeignKey("ItemE1Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.EntityItemGroundfos.ItemE2", "ItemE2")
                        .WithMany("Titles")
                        .HasForeignKey("ItemE2Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.EntityItemGroundfos.ItemE3", "ItemE3")
                        .WithMany("Titles")
                        .HasForeignKey("ItemE3Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.EntityItemGroundfos.ItemE4", "ItemE4")
                        .WithMany("Titles")
                        .HasForeignKey("ItemE4Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.EntityItemGroundfos.ItemE5", "ItemE5")
                        .WithMany("Titles")
                        .HasForeignKey("ItemE5Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.EntityItemGroundfos.ItemE6", "ItemE6")
                        .WithMany("Titles")
                        .HasForeignKey("ItemE6Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.EntityItemGroundfos.ItemE7", "ItemE7")
                        .WithMany("Titles")
                        .HasForeignKey("ItemE7Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.EntityItemUvResources.ItemF1", "ItemF1")
                        .WithMany("Titles")
                        .HasForeignKey("ItemF1Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.EntityItemBACCoolingTowers.ItemG1", "ItemG1")
                        .WithMany("Titles")
                        .HasForeignKey("ItemG1Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.EntityItemBACCoolingTowers.ItemG2", "ItemG2")
                        .WithMany("Titles")
                        .HasForeignKey("ItemG2Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.EntityItemBACCoolingTowers.ItemG3", "ItemG3")
                        .WithMany("Titles")
                        .HasForeignKey("ItemG3Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.EntityItemBACCoolingTowers.ItemG4", "ItemG4")
                        .WithMany("Titles")
                        .HasForeignKey("ItemG4Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.EntityItemBACCoolingTowers.ItemG5", "ItemG5")
                        .WithMany("Titles")
                        .HasForeignKey("ItemG5Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.EntityItemBACCoolingTowers.ItemG6", "ItemG6")
                        .WithMany("Titles")
                        .HasForeignKey("ItemG6Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.EntityItemBACClosedCircuits.ItemH1", "ItemH1")
                        .WithMany("Titles")
                        .HasForeignKey("ItemH1Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.EntityItemBACClosedCircuits.ItemH2", "ItemH2")
                        .WithMany("Titles")
                        .HasForeignKey("ItemH2Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.EntityItemBACClosedCircuits.ItemH3", "ItemH3")
                        .WithMany("Titles")
                        .HasForeignKey("ItemH3Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.EntityItemBACClosedCircuits.ItemH4", "ItemH4")
                        .WithMany("Titles")
                        .HasForeignKey("ItemH4Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orion.Domain.EntityItemBACClosedCircuits.ItemH5", "ItemH5")
                        .WithMany("Titles")
                        .HasForeignKey("ItemH5Id")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogABB.CatalogB1", b =>
                {
                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogABB.CatalogB2", b =>
                {
                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogABB.CatalogB3", b =>
                {
                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogABB.CatalogB4", b =>
                {
                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogABB.CatalogB5", b =>
                {
                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogAmericanWheatley.CatalogC1", b =>
                {
                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogAmericanWheatley.CatalogC2", b =>
                {
                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogAmericanWheatley.CatalogC3", b =>
                {
                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogAmericanWheatley.CatalogC4", b =>
                {
                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogBACClosedCircuits.CatalogH1", b =>
                {
                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogBACClosedCircuits.CatalogH2", b =>
                {
                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogBACClosedCircuits.CatalogH3", b =>
                {
                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogBACClosedCircuits.CatalogH4", b =>
                {
                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogBACClosedCircuits.CatalogH5", b =>
                {
                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogBACCoolingTowers.CatalogG1", b =>
                {
                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogBACCoolingTowers.CatalogG2", b =>
                {
                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogBACCoolingTowers.CatalogG3", b =>
                {
                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogBACCoolingTowers.CatalogG4", b =>
                {
                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogBACCoolingTowers.CatalogG5", b =>
                {
                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogBACCoolingTowers.CatalogG6", b =>
                {
                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogGroundfos.CatalogE1", b =>
                {
                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogGroundfos.CatalogE2", b =>
                {
                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogGroundfos.CatalogE3", b =>
                {
                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogGroundfos.CatalogE4", b =>
                {
                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogGroundfos.CatalogE5", b =>
                {
                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogGroundfos.CatalogE6", b =>
                {
                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogGroundfos.CatalogE7", b =>
                {
                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogPuroflux.CatalogD1", b =>
                {
                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogPuroflux.CatalogD2", b =>
                {
                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogQuantech.CatalogA1", b =>
                {
                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogQuantech.CatalogA2", b =>
                {
                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogQuantech.CatalogA3", b =>
                {
                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogQuantech.CatalogA4", b =>
                {
                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("Orion.Domain.EntityCatalogUvResources.CatalogF1", b =>
                {
                    b.HasOne("Orion.Domain.Entity.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("Orion.Domain.EntityItem.ItemA1", b =>
                {
                    b.HasOne("Orion.Domain.EntityCatalogQuantech.CatalogA1", "CatalogA1")
                        .WithMany()
                        .HasForeignKey("CatalogA1Id");

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("ItemA1s")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.EntityItem.ItemA2", b =>
                {
                    b.HasOne("Orion.Domain.EntityCatalogQuantech.CatalogA2", "CatalogA2")
                        .WithMany()
                        .HasForeignKey("CatalogA2Id");

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("ItemA2s")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.EntityItem.ItemA3", b =>
                {
                    b.HasOne("Orion.Domain.EntityCatalogQuantech.CatalogA3", "CatalogA3")
                        .WithMany()
                        .HasForeignKey("CatalogA3Id");

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("ItemA3s")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.EntityItem.ItemA4", b =>
                {
                    b.HasOne("Orion.Domain.EntityCatalogQuantech.CatalogA4", "CatalogA4")
                        .WithMany()
                        .HasForeignKey("CatalogA4Id");

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("ItemA4s")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.EntityItemABB.ItemB1", b =>
                {
                    b.HasOne("Orion.Domain.EntityCatalogABB.CatalogB1", "CatalogB1")
                        .WithMany()
                        .HasForeignKey("CatalogB1Id");

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("ItemB1s")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.EntityItemABB.ItemB2", b =>
                {
                    b.HasOne("Orion.Domain.EntityCatalogABB.CatalogB2", "CatalogB2")
                        .WithMany()
                        .HasForeignKey("CatalogB2Id");

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("ItemB2s")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.EntityItemABB.ItemB3", b =>
                {
                    b.HasOne("Orion.Domain.EntityCatalogABB.CatalogB3", "CatalogB3")
                        .WithMany()
                        .HasForeignKey("CatalogB3Id");

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("ItemB3s")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.EntityItemABB.ItemB4", b =>
                {
                    b.HasOne("Orion.Domain.EntityCatalogABB.CatalogB4", "CatalogB4")
                        .WithMany()
                        .HasForeignKey("CatalogB4Id");

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("ItemB4s")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.EntityItemABB.ItemB5", b =>
                {
                    b.HasOne("Orion.Domain.EntityCatalogABB.CatalogB5", "CatalogB5")
                        .WithMany()
                        .HasForeignKey("CatalogB5Id");

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("ItemB5s")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.EntityItemAmericanWheatley.ItemC1", b =>
                {
                    b.HasOne("Orion.Domain.EntityCatalogAmericanWheatley.CatalogC1", "CatalogC1")
                        .WithMany()
                        .HasForeignKey("CatalogC1Id");

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("ItemC1s")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.EntityItemAmericanWheatley.ItemC2", b =>
                {
                    b.HasOne("Orion.Domain.EntityCatalogAmericanWheatley.CatalogC2", "CatalogC2")
                        .WithMany()
                        .HasForeignKey("CatalogC2Id");

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("ItemC2s")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.EntityItemAmericanWheatley.ItemC3", b =>
                {
                    b.HasOne("Orion.Domain.EntityCatalogAmericanWheatley.CatalogC3", "CatalogC3")
                        .WithMany()
                        .HasForeignKey("CatalogC3Id");

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("ItemC3s")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.EntityItemAmericanWheatley.ItemC4", b =>
                {
                    b.HasOne("Orion.Domain.EntityCatalogAmericanWheatley.CatalogC4", "CatalogC4")
                        .WithMany()
                        .HasForeignKey("CatalogC4Id");

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("ItemC4s")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.EntityItemBACClosedCircuits.ItemH1", b =>
                {
                    b.HasOne("Orion.Domain.EntityCatalogBACClosedCircuits.CatalogH1", "CatalogH1")
                        .WithMany()
                        .HasForeignKey("CatalogH1Id");

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("ItemH1s")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.EntityItemBACClosedCircuits.ItemH2", b =>
                {
                    b.HasOne("Orion.Domain.EntityCatalogBACClosedCircuits.CatalogH2", "CatalogH2")
                        .WithMany()
                        .HasForeignKey("CatalogH2Id");

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("ItemH2s")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.EntityItemBACClosedCircuits.ItemH3", b =>
                {
                    b.HasOne("Orion.Domain.EntityCatalogBACClosedCircuits.CatalogH3", "CatalogH3")
                        .WithMany()
                        .HasForeignKey("CatalogH3Id");

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("ItemH3s")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.EntityItemBACClosedCircuits.ItemH4", b =>
                {
                    b.HasOne("Orion.Domain.EntityCatalogBACClosedCircuits.CatalogH4", "CatalogH4")
                        .WithMany()
                        .HasForeignKey("CatalogH4Id");

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("ItemH4s")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.EntityItemBACClosedCircuits.ItemH5", b =>
                {
                    b.HasOne("Orion.Domain.EntityCatalogBACClosedCircuits.CatalogH5", "CatalogH5")
                        .WithMany()
                        .HasForeignKey("CatalogH5Id");

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("ItemH5s")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.EntityItemBACCoolingTowers.ItemG1", b =>
                {
                    b.HasOne("Orion.Domain.EntityCatalogBACCoolingTowers.CatalogG1", "CatalogG1")
                        .WithMany()
                        .HasForeignKey("CatalogG1Id");

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("ItemG1s")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.EntityItemBACCoolingTowers.ItemG2", b =>
                {
                    b.HasOne("Orion.Domain.EntityCatalogBACCoolingTowers.CatalogG2", "CatalogG2")
                        .WithMany()
                        .HasForeignKey("CatalogG2Id");

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("ItemG2s")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.EntityItemBACCoolingTowers.ItemG3", b =>
                {
                    b.HasOne("Orion.Domain.EntityCatalogBACCoolingTowers.CatalogG3", "CatalogG3")
                        .WithMany()
                        .HasForeignKey("CatalogG3Id");

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("ItemG3s")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.EntityItemBACCoolingTowers.ItemG4", b =>
                {
                    b.HasOne("Orion.Domain.EntityCatalogBACCoolingTowers.CatalogG4", "CatalogG4")
                        .WithMany()
                        .HasForeignKey("CatalogG4Id");

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("ItemG4s")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.EntityItemBACCoolingTowers.ItemG5", b =>
                {
                    b.HasOne("Orion.Domain.EntityCatalogBACCoolingTowers.CatalogG5", "CatalogG5")
                        .WithMany()
                        .HasForeignKey("CatalogG5Id");

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("ItemG5s")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.EntityItemBACCoolingTowers.ItemG6", b =>
                {
                    b.HasOne("Orion.Domain.EntityCatalogBACCoolingTowers.CatalogG6", "CatalogG6")
                        .WithMany()
                        .HasForeignKey("CatalogG6Id");

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("ItemG6s")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.EntityItemGroundfos.ItemE1", b =>
                {
                    b.HasOne("Orion.Domain.EntityCatalogGroundfos.CatalogE1", "CatalogE1")
                        .WithMany()
                        .HasForeignKey("CatalogE1Id");

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("ItemE1s")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.EntityItemGroundfos.ItemE2", b =>
                {
                    b.HasOne("Orion.Domain.EntityCatalogGroundfos.CatalogE2", "CatalogE2")
                        .WithMany()
                        .HasForeignKey("CatalogE2Id");

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("ItemE2s")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.EntityItemGroundfos.ItemE3", b =>
                {
                    b.HasOne("Orion.Domain.EntityCatalogGroundfos.CatalogE3", "CatalogE3")
                        .WithMany()
                        .HasForeignKey("CatalogE3Id");

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("ItemE3s")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.EntityItemGroundfos.ItemE4", b =>
                {
                    b.HasOne("Orion.Domain.EntityCatalogGroundfos.CatalogE4", "CatalogE4")
                        .WithMany()
                        .HasForeignKey("CatalogE4Id");

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("ItemE4s")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.EntityItemGroundfos.ItemE5", b =>
                {
                    b.HasOne("Orion.Domain.EntityCatalogGroundfos.CatalogE5", "CatalogE5")
                        .WithMany()
                        .HasForeignKey("CatalogE5Id");

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("ItemE5s")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.EntityItemGroundfos.ItemE6", b =>
                {
                    b.HasOne("Orion.Domain.EntityCatalogGroundfos.CatalogE6", "CatalogE6")
                        .WithMany()
                        .HasForeignKey("CatalogE6Id");

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("ItemE6s")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.EntityItemGroundfos.ItemE7", b =>
                {
                    b.HasOne("Orion.Domain.EntityCatalogGroundfos.CatalogE7", "CatalogE7")
                        .WithMany()
                        .HasForeignKey("CatalogE7Id");

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("ItemE7s")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.EntityItemPuroFlux.ItemD1", b =>
                {
                    b.HasOne("Orion.Domain.EntityCatalogPuroflux.CatalogD1", "CatalogD1")
                        .WithMany()
                        .HasForeignKey("CatalogD1Id");

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("ItemD1s")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.EntityItemPuroFlux.ItemD2", b =>
                {
                    b.HasOne("Orion.Domain.EntityCatalogPuroflux.CatalogD2", "CatalogD2")
                        .WithMany()
                        .HasForeignKey("CatalogD2Id");

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("ItemD2s")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Orion.Domain.EntityItemUvResources.ItemF1", b =>
                {
                    b.HasOne("Orion.Domain.EntityCatalogUvResources.CatalogF1", "CatalogF1")
                        .WithMany()
                        .HasForeignKey("CatalogF1Id");

                    b.HasOne("Orion.Domain.Entity.Quote", "Quote")
                        .WithMany("ItemF1s")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
